// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.0
// source: RoboSdk.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Аргументы RI_SDK_InitSDK
type RI_SDK_InitSDKParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LogLevel int64 `protobuf:"varint,1,opt,name=logLevel,proto3" json:"logLevel,omitempty"`
}

func (x *RI_SDK_InitSDKParams) Reset() {
	*x = RI_SDK_InitSDKParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_InitSDKParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_InitSDKParams) ProtoMessage() {}

func (x *RI_SDK_InitSDKParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_InitSDKParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_InitSDKParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{0}
}

func (x *RI_SDK_InitSDKParams) GetLogLevel() int64 {
	if x != nil {
		return x.LogLevel
	}
	return 0
}

// Возвращаемые значения RI_SDK_InitSDK
type RI_SDK_InitSDKReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_InitSDKReturn) Reset() {
	*x = RI_SDK_InitSDKReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_InitSDKReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_InitSDKReturn) ProtoMessage() {}

func (x *RI_SDK_InitSDKReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_InitSDKReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_InitSDKReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{1}
}

func (x *RI_SDK_InitSDKReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_InitSDKReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_CreateBasic
type RI_SDK_CreateBasicParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
}

func (x *RI_SDK_CreateBasicParams) Reset() {
	*x = RI_SDK_CreateBasicParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_CreateBasicParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_CreateBasicParams) ProtoMessage() {}

func (x *RI_SDK_CreateBasicParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_CreateBasicParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_CreateBasicParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{2}
}

func (x *RI_SDK_CreateBasicParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

// Возвращаемые значения RI_SDK_CreateBasic
type RI_SDK_CreateBasicReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	ErrorText   string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode   int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_CreateBasicReturn) Reset() {
	*x = RI_SDK_CreateBasicReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_CreateBasicReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_CreateBasicReturn) ProtoMessage() {}

func (x *RI_SDK_CreateBasicReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_CreateBasicReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_CreateBasicReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{3}
}

func (x *RI_SDK_CreateBasicReturn) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_CreateBasicReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_CreateBasicReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// АргументыRI_SDK_DestroyComponent
type RI_SDK_DestroyComponentParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
}

func (x *RI_SDK_DestroyComponentParams) Reset() {
	*x = RI_SDK_DestroyComponentParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_DestroyComponentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_DestroyComponentParams) ProtoMessage() {}

func (x *RI_SDK_DestroyComponentParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_DestroyComponentParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_DestroyComponentParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{4}
}

func (x *RI_SDK_DestroyComponentParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

// Возвращаемые значения RI_SDK_DestroyComponent
type RI_SDK_DestroyComponentReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_DestroyComponentReturn) Reset() {
	*x = RI_SDK_DestroyComponentReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_DestroyComponentReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_DestroyComponentReturn) ProtoMessage() {}

func (x *RI_SDK_DestroyComponentReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_DestroyComponentReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_DestroyComponentReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{5}
}

func (x *RI_SDK_DestroyComponentReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_DestroyComponentReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// АргументыRI_SDK_DestroyComponent
type RI_SDK_DestroySDKParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsForce bool `protobuf:"varint,1,opt,name=isForce,proto3" json:"isForce,omitempty"`
}

func (x *RI_SDK_DestroySDKParams) Reset() {
	*x = RI_SDK_DestroySDKParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_DestroySDKParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_DestroySDKParams) ProtoMessage() {}

func (x *RI_SDK_DestroySDKParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_DestroySDKParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_DestroySDKParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{6}
}

func (x *RI_SDK_DestroySDKParams) GetIsForce() bool {
	if x != nil {
		return x.IsForce
	}
	return false
}

// Возвращаемые значения RI_SDK_DestroyComponent
type RI_SDK_DestroySDKReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_DestroySDKReturn) Reset() {
	*x = RI_SDK_DestroySDKReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_DestroySDKReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_DestroySDKReturn) ProtoMessage() {}

func (x *RI_SDK_DestroySDKReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_DestroySDKReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_DestroySDKReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{7}
}

func (x *RI_SDK_DestroySDKReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_DestroySDKReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Connector_I2C_OpenParams
type RI_SDK_Connector_I2C_OpenParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Addr        uint64 `protobuf:"varint,2,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *RI_SDK_Connector_I2C_OpenParams) Reset() {
	*x = RI_SDK_Connector_I2C_OpenParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_OpenParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_OpenParams) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_OpenParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_OpenParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_OpenParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{8}
}

func (x *RI_SDK_Connector_I2C_OpenParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Connector_I2C_OpenParams) GetAddr() uint64 {
	if x != nil {
		return x.Addr
	}
	return 0
}

// Возвращаемые значения RI_SDK_Connector_I2C_OpenReturn
type RI_SDK_Connector_I2C_OpenReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Connector_I2C_OpenReturn) Reset() {
	*x = RI_SDK_Connector_I2C_OpenReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_OpenReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_OpenReturn) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_OpenReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_OpenReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_OpenReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{9}
}

func (x *RI_SDK_Connector_I2C_OpenReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Connector_I2C_OpenReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{10}
}

// Аргументы RI_SDK_Connector_I2C_ExtendParams
type RI_SDK_Connector_I2C_ExtendParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectorDescriptor int64 `protobuf:"varint,1,opt,name=connectorDescriptor,proto3" json:"connectorDescriptor,omitempty"`
}

func (x *RI_SDK_Connector_I2C_ExtendParams) Reset() {
	*x = RI_SDK_Connector_I2C_ExtendParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_ExtendParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_ExtendParams) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_ExtendParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_ExtendParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_ExtendParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{11}
}

func (x *RI_SDK_Connector_I2C_ExtendParams) GetConnectorDescriptor() int64 {
	if x != nil {
		return x.ConnectorDescriptor
	}
	return 0
}

// Возвращаемые значения RI_SDK_Connector_I2C_ExtendReturn
type RI_SDK_Connector_I2C_ExtendReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	ErrorText   string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode   int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Connector_I2C_ExtendReturn) Reset() {
	*x = RI_SDK_Connector_I2C_ExtendReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_ExtendReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_ExtendReturn) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_ExtendReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_ExtendReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_ExtendReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{12}
}

func (x *RI_SDK_Connector_I2C_ExtendReturn) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Connector_I2C_ExtendReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Connector_I2C_ExtendReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Connector_I2C_ExtendParams
type RI_SDK_Connector_I2C_StateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
}

func (x *RI_SDK_Connector_I2C_StateParams) Reset() {
	*x = RI_SDK_Connector_I2C_StateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_StateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_StateParams) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_StateParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_StateParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_StateParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{13}
}

func (x *RI_SDK_Connector_I2C_StateParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

// Возвращаемые значения RI_SDK_Connector_I2C_ExtendReturn
type RI_SDK_Connector_I2C_StateReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State     int64  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	ErrorText string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Connector_I2C_StateReturn) Reset() {
	*x = RI_SDK_Connector_I2C_StateReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_StateReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_StateReturn) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_StateReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_StateReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_StateReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{14}
}

func (x *RI_SDK_Connector_I2C_StateReturn) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *RI_SDK_Connector_I2C_StateReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Connector_I2C_StateReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Connector_I2C_CloseAllParams
type RI_SDK_Connector_I2C_CloseAllParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
}

func (x *RI_SDK_Connector_I2C_CloseAllParams) Reset() {
	*x = RI_SDK_Connector_I2C_CloseAllParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_CloseAllParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_CloseAllParams) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_CloseAllParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_CloseAllParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_CloseAllParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{15}
}

func (x *RI_SDK_Connector_I2C_CloseAllParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

// Возвращаемые значения RI_SDK_Connector_I2C_CloseAllReturn
type RI_SDK_Connector_I2C_CloseAllReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Connector_I2C_CloseAllReturn) Reset() {
	*x = RI_SDK_Connector_I2C_CloseAllReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_CloseAllReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_CloseAllReturn) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_CloseAllReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_CloseAllReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_CloseAllReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{16}
}

func (x *RI_SDK_Connector_I2C_CloseAllReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Connector_I2C_CloseAllReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Connector_I2C_CloseParams
type RI_SDK_Connector_I2C_CloseParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Addr        uint64 `protobuf:"varint,2,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *RI_SDK_Connector_I2C_CloseParams) Reset() {
	*x = RI_SDK_Connector_I2C_CloseParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_CloseParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_CloseParams) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_CloseParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_CloseParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_CloseParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{17}
}

func (x *RI_SDK_Connector_I2C_CloseParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Connector_I2C_CloseParams) GetAddr() uint64 {
	if x != nil {
		return x.Addr
	}
	return 0
}

// Возвращаемые значения RI_SDK_Connector_I2C_CloseReturn
type RI_SDK_Connector_I2C_CloseReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Connector_I2C_CloseReturn) Reset() {
	*x = RI_SDK_Connector_I2C_CloseReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_CloseReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_CloseReturn) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_CloseReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_CloseReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_CloseReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{18}
}

func (x *RI_SDK_Connector_I2C_CloseReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Connector_I2C_CloseReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Connector_I2C_WriteBytesParams
type RI_SDK_Connector_I2C_WriteBytesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Addr        uint64 `protobuf:"varint,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Buf         []byte `protobuf:"bytes,3,opt,name=buf,proto3" json:"buf,omitempty"`
	Len         int64  `protobuf:"varint,4,opt,name=len,proto3" json:"len,omitempty"`
}

func (x *RI_SDK_Connector_I2C_WriteBytesParams) Reset() {
	*x = RI_SDK_Connector_I2C_WriteBytesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_WriteBytesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_WriteBytesParams) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_WriteBytesParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_WriteBytesParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_WriteBytesParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{19}
}

func (x *RI_SDK_Connector_I2C_WriteBytesParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Connector_I2C_WriteBytesParams) GetAddr() uint64 {
	if x != nil {
		return x.Addr
	}
	return 0
}

func (x *RI_SDK_Connector_I2C_WriteBytesParams) GetBuf() []byte {
	if x != nil {
		return x.Buf
	}
	return nil
}

func (x *RI_SDK_Connector_I2C_WriteBytesParams) GetLen() int64 {
	if x != nil {
		return x.Len
	}
	return 0
}

// Возвращаемые значения RI_SDK_Connector_I2C_WriteBytesReturn
type RI_SDK_Connector_I2C_WriteBytesReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WroteBytesLen int64  `protobuf:"varint,1,opt,name=wroteBytesLen,proto3" json:"wroteBytesLen,omitempty"`
	ErrorText     string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode     int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Connector_I2C_WriteBytesReturn) Reset() {
	*x = RI_SDK_Connector_I2C_WriteBytesReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_WriteBytesReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_WriteBytesReturn) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_WriteBytesReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_WriteBytesReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_WriteBytesReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{20}
}

func (x *RI_SDK_Connector_I2C_WriteBytesReturn) GetWroteBytesLen() int64 {
	if x != nil {
		return x.WroteBytesLen
	}
	return 0
}

func (x *RI_SDK_Connector_I2C_WriteBytesReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Connector_I2C_WriteBytesReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Connector_I2C_ReadBytesParams
type RI_SDK_Connector_I2C_ReadBytesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Addr        uint64 `protobuf:"varint,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Buf         []byte `protobuf:"bytes,3,opt,name=buf,proto3" json:"buf,omitempty"`
}

func (x *RI_SDK_Connector_I2C_ReadBytesParams) Reset() {
	*x = RI_SDK_Connector_I2C_ReadBytesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_ReadBytesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_ReadBytesParams) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_ReadBytesParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_ReadBytesParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_ReadBytesParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{21}
}

func (x *RI_SDK_Connector_I2C_ReadBytesParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Connector_I2C_ReadBytesParams) GetAddr() uint64 {
	if x != nil {
		return x.Addr
	}
	return 0
}

func (x *RI_SDK_Connector_I2C_ReadBytesParams) GetBuf() []byte {
	if x != nil {
		return x.Buf
	}
	return nil
}

// Возвращаемые значения RI_SDK_Connector_I2C_ReadBytesReturn
type RI_SDK_Connector_I2C_ReadBytesReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText      string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode      int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ReadedBytesLen int64  `protobuf:"varint,3,opt,name=readedBytesLen,proto3" json:"readedBytesLen,omitempty"`
}

func (x *RI_SDK_Connector_I2C_ReadBytesReturn) Reset() {
	*x = RI_SDK_Connector_I2C_ReadBytesReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_ReadBytesReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_ReadBytesReturn) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_ReadBytesReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_ReadBytesReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_ReadBytesReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{22}
}

func (x *RI_SDK_Connector_I2C_ReadBytesReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Connector_I2C_ReadBytesReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *RI_SDK_Connector_I2C_ReadBytesReturn) GetReadedBytesLen() int64 {
	if x != nil {
		return x.ReadedBytesLen
	}
	return 0
}

// Аргументы RI_SDK_Connector_I2C_ReadBytesParams
type RI_SDK_Connector_I2C_WriteByteParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Addr        uint64 `protobuf:"varint,2,opt,name=addr,proto3" json:"addr,omitempty"`
	Value       []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RI_SDK_Connector_I2C_WriteByteParams) Reset() {
	*x = RI_SDK_Connector_I2C_WriteByteParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_WriteByteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_WriteByteParams) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_WriteByteParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_WriteByteParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_WriteByteParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{23}
}

func (x *RI_SDK_Connector_I2C_WriteByteParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Connector_I2C_WriteByteParams) GetAddr() uint64 {
	if x != nil {
		return x.Addr
	}
	return 0
}

func (x *RI_SDK_Connector_I2C_WriteByteParams) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Возвращаемые значения RI_SDK_Connector_I2C_WriteByteReturn
type RI_SDK_Connector_I2C_WriteByteReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Connector_I2C_WriteByteReturn) Reset() {
	*x = RI_SDK_Connector_I2C_WriteByteReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_WriteByteReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_WriteByteReturn) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_WriteByteReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_WriteByteReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_WriteByteReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{24}
}

func (x *RI_SDK_Connector_I2C_WriteByteReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Connector_I2C_WriteByteReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Connector_I2C_ReadByteParams
type RI_SDK_Connector_I2C_ReadByteParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Addr        uint64 `protobuf:"varint,2,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *RI_SDK_Connector_I2C_ReadByteParams) Reset() {
	*x = RI_SDK_Connector_I2C_ReadByteParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_ReadByteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_ReadByteParams) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_ReadByteParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_ReadByteParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_ReadByteParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{25}
}

func (x *RI_SDK_Connector_I2C_ReadByteParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Connector_I2C_ReadByteParams) GetAddr() uint64 {
	if x != nil {
		return x.Addr
	}
	return 0
}

// Возвращаемые значения RI_SDK_Connector_I2C_ReadByteReturn
type RI_SDK_Connector_I2C_ReadByteReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	ErrorText string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Connector_I2C_ReadByteReturn) Reset() {
	*x = RI_SDK_Connector_I2C_ReadByteReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_I2C_ReadByteReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_I2C_ReadByteReturn) ProtoMessage() {}

func (x *RI_SDK_Connector_I2C_ReadByteReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_I2C_ReadByteReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_I2C_ReadByteReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{26}
}

func (x *RI_SDK_Connector_I2C_ReadByteReturn) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *RI_SDK_Connector_I2C_ReadByteReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Connector_I2C_ReadByteReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Sigmod_PWM_GetResolution
type RI_SDK_Sigmod_PWM_GetResolutionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	ErrorText   string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode   int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_GetResolutionParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_GetResolutionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_GetResolutionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_GetResolutionParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_GetResolutionParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_GetResolutionParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_GetResolutionParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{27}
}

func (x *RI_SDK_Sigmod_PWM_GetResolutionParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_GetResolutionParams) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_GetResolutionParams) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Возвращаемые значения RI_SDK_Sigmod_PWM_GetResolution
type RI_SDK_Sigmod_PWM_GetResolutioneReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resolution int64  `protobuf:"varint,1,opt,name=resolution,proto3" json:"resolution,omitempty"`
	ErrorText  string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode  int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_GetResolutioneReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_GetResolutioneReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_GetResolutioneReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_GetResolutioneReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_GetResolutioneReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_GetResolutioneReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_GetResolutioneReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{28}
}

func (x *RI_SDK_Sigmod_PWM_GetResolutioneReturn) GetResolution() int64 {
	if x != nil {
		return x.Resolution
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_GetResolutioneReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_GetResolutioneReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Sigmod_PWM_GetFreqParams
type RI_SDK_Sigmod_PWM_GetFreqParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_GetFreqParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_GetFreqParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_GetFreqParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_GetFreqParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_GetFreqParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_GetFreqParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_GetFreqParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{29}
}

func (x *RI_SDK_Sigmod_PWM_GetFreqParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

// Возвращаемые значения RI_SDK_sigmod_PWM_GetFreqReturn
type RI_SDK_Sigmod_PWM_GetFreqReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Freq      int64  `protobuf:"varint,1,opt,name=freq,proto3" json:"freq,omitempty"`
	ErrorText string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_GetFreqReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_GetFreqReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_GetFreqReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_GetFreqReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_GetFreqReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_GetFreqReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_GetFreqReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{30}
}

func (x *RI_SDK_Sigmod_PWM_GetFreqReturn) GetFreq() int64 {
	if x != nil {
		return x.Freq
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_GetFreqReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_GetFreqReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Sigmod_PWM_SetFreqParams
type RI_SDK_Sigmod_PWM_SetFreqParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Freq        int64 `protobuf:"varint,2,opt,name=freq,proto3" json:"freq,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_SetFreqParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_SetFreqParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_SetFreqParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_SetFreqParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_SetFreqParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_SetFreqParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_SetFreqParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{31}
}

func (x *RI_SDK_Sigmod_PWM_SetFreqParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_SetFreqParams) GetFreq() int64 {
	if x != nil {
		return x.Freq
	}
	return 0
}

// Возвращаемые значения RI_SDK_Sigmod_PWM_SetFreqReturn
type RI_SDK_Sigmod_PWM_SetFreqReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_SetFreqReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_SetFreqReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_SetFreqReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_SetFreqReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_SetFreqReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_SetFreqReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_SetFreqReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{32}
}

func (x *RI_SDK_Sigmod_PWM_SetFreqReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_SetFreqReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Sigmod_PWM_WriteRegBytesParams
type RI_SDK_Sigmod_PWM_WriteRegBytesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Reg         []byte `protobuf:"bytes,2,opt,name=reg,proto3" json:"reg,omitempty"`
	Buf         []byte `protobuf:"bytes,3,opt,name=buf,proto3" json:"buf,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_WriteRegBytesParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_WriteRegBytesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_WriteRegBytesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_WriteRegBytesParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_WriteRegBytesParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_WriteRegBytesParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_WriteRegBytesParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{33}
}

func (x *RI_SDK_Sigmod_PWM_WriteRegBytesParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_WriteRegBytesParams) GetReg() []byte {
	if x != nil {
		return x.Reg
	}
	return nil
}

func (x *RI_SDK_Sigmod_PWM_WriteRegBytesParams) GetBuf() []byte {
	if x != nil {
		return x.Buf
	}
	return nil
}

// Возвращаемые значения RI_SDK_Sigmod_PWM_WriteRegBytesReturn
type RI_SDK_Sigmod_PWM_WriteRegBytesReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WroteBytesLen int64  `protobuf:"varint,1,opt,name=wroteBytesLen,proto3" json:"wroteBytesLen,omitempty"`
	ErrorText     string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode     int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_WriteRegBytesReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_WriteRegBytesReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_WriteRegBytesReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_WriteRegBytesReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_WriteRegBytesReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_WriteRegBytesReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_WriteRegBytesReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{34}
}

func (x *RI_SDK_Sigmod_PWM_WriteRegBytesReturn) GetWroteBytesLen() int64 {
	if x != nil {
		return x.WroteBytesLen
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_WriteRegBytesReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_WriteRegBytesReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Sigmod_PWM_ReadRegBytesParams
type RI_SDK_Sigmod_PWM_ReadRegBytesParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Reg         []byte `protobuf:"bytes,2,opt,name=reg,proto3" json:"reg,omitempty"`
	Buf         []byte `protobuf:"bytes,3,opt,name=buf,proto3" json:"buf,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_ReadRegBytesParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_ReadRegBytesParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_ReadRegBytesParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_ReadRegBytesParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_ReadRegBytesParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_ReadRegBytesParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_ReadRegBytesParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{35}
}

func (x *RI_SDK_Sigmod_PWM_ReadRegBytesParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_ReadRegBytesParams) GetReg() []byte {
	if x != nil {
		return x.Reg
	}
	return nil
}

func (x *RI_SDK_Sigmod_PWM_ReadRegBytesParams) GetBuf() []byte {
	if x != nil {
		return x.Buf
	}
	return nil
}

// Возвращаемые значения RI_SDK_Sigmod_PWM_ReadRegBytesReturn
type RI_SDK_Sigmod_PWM_ReadRegBytesReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadedBytesLen int64  `protobuf:"varint,1,opt,name=readedBytesLen,proto3" json:"readedBytesLen,omitempty"`
	ErrorText      string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode      int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_ReadRegBytesReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_ReadRegBytesReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_ReadRegBytesReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_ReadRegBytesReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_ReadRegBytesReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_ReadRegBytesReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_ReadRegBytesReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{36}
}

func (x *RI_SDK_Sigmod_PWM_ReadRegBytesReturn) GetReadedBytesLen() int64 {
	if x != nil {
		return x.ReadedBytesLen
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_ReadRegBytesReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_ReadRegBytesReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Sigmod_PWM_WriteRegByteParams
type RI_SDK_Sigmod_PWM_WriteRegByteParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Reg         []byte `protobuf:"bytes,2,opt,name=reg,proto3" json:"reg,omitempty"`
	Value       []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_WriteRegByteParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_WriteRegByteParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_WriteRegByteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_WriteRegByteParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_WriteRegByteParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_WriteRegByteParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_WriteRegByteParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{37}
}

func (x *RI_SDK_Sigmod_PWM_WriteRegByteParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_WriteRegByteParams) GetReg() []byte {
	if x != nil {
		return x.Reg
	}
	return nil
}

func (x *RI_SDK_Sigmod_PWM_WriteRegByteParams) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

// Возвращаемые значения RI_SDK_Sigmod_PWM_WriteRegByteReturn
type RI_SDK_Sigmod_PWM_WriteRegByteReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_WriteRegByteReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_WriteRegByteReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_WriteRegByteReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_WriteRegByteReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_WriteRegByteReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_WriteRegByteReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_WriteRegByteReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{38}
}

func (x *RI_SDK_Sigmod_PWM_WriteRegByteReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_WriteRegByteReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Sigmod_PWM_ReadRegByteParams
type RI_SDK_Sigmod_PWM_ReadRegByteParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Reg         []byte `protobuf:"bytes,2,opt,name=reg,proto3" json:"reg,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_ReadRegByteParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_ReadRegByteParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_ReadRegByteParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_ReadRegByteParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_ReadRegByteParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_ReadRegByteParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_ReadRegByteParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{39}
}

func (x *RI_SDK_Sigmod_PWM_ReadRegByteParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_ReadRegByteParams) GetReg() []byte {
	if x != nil {
		return x.Reg
	}
	return nil
}

// Возвращаемые значения RI_SDK_Sigmod_PWM_ReadRegByteReturn
type RI_SDK_Sigmod_PWM_ReadRegByteReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	ErrorText string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_ReadRegByteReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_ReadRegByteReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_ReadRegByteReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_ReadRegByteReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_ReadRegByteReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_ReadRegByteReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_ReadRegByteReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{40}
}

func (x *RI_SDK_Sigmod_PWM_ReadRegByteReturn) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *RI_SDK_Sigmod_PWM_ReadRegByteReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_ReadRegByteReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Executor_Extend
type RI_SDK_Executor_ExtendParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Basic int64 `protobuf:"varint,1,opt,name=basic,proto3" json:"basic,omitempty"`
}

func (x *RI_SDK_Executor_ExtendParams) Reset() {
	*x = RI_SDK_Executor_ExtendParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Executor_ExtendParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Executor_ExtendParams) ProtoMessage() {}

func (x *RI_SDK_Executor_ExtendParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Executor_ExtendParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Executor_ExtendParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{41}
}

func (x *RI_SDK_Executor_ExtendParams) GetBasic() int64 {
	if x != nil {
		return x.Basic
	}
	return 0
}

// Возвращаемые значения RI_SDK_Executor_Extend
type RI_SDK_Executor_ExtendReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desrciptor int64  `protobuf:"varint,1,opt,name=desrciptor,proto3" json:"desrciptor,omitempty"`
	ErrorText  string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode  int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Executor_ExtendReturn) Reset() {
	*x = RI_SDK_Executor_ExtendReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Executor_ExtendReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Executor_ExtendReturn) ProtoMessage() {}

func (x *RI_SDK_Executor_ExtendReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Executor_ExtendReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Executor_ExtendReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{42}
}

func (x *RI_SDK_Executor_ExtendReturn) GetDesrciptor() int64 {
	if x != nil {
		return x.Desrciptor
	}
	return 0
}

func (x *RI_SDK_Executor_ExtendReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Executor_ExtendReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Executor_State
type RI_SDK_Executor_StateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desrciptor int64 `protobuf:"varint,1,opt,name=desrciptor,proto3" json:"desrciptor,omitempty"`
}

func (x *RI_SDK_Executor_StateParams) Reset() {
	*x = RI_SDK_Executor_StateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Executor_StateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Executor_StateParams) ProtoMessage() {}

func (x *RI_SDK_Executor_StateParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Executor_StateParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Executor_StateParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{43}
}

func (x *RI_SDK_Executor_StateParams) GetDesrciptor() int64 {
	if x != nil {
		return x.Desrciptor
	}
	return 0
}

// Возвращаемые значения RI_SDK_Executor_State
type RI_SDK_Executor_StateReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State     int64  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	ErrorText string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Executor_StateReturn) Reset() {
	*x = RI_SDK_Executor_StateReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Executor_StateReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Executor_StateReturn) ProtoMessage() {}

func (x *RI_SDK_Executor_StateReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Executor_StateReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Executor_StateReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{44}
}

func (x *RI_SDK_Executor_StateReturn) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *RI_SDK_Executor_StateReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Executor_StateReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Connector_Extend
type RI_SDK_Connector_ExtendParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Basic int64 `protobuf:"varint,1,opt,name=basic,proto3" json:"basic,omitempty"`
}

func (x *RI_SDK_Connector_ExtendParams) Reset() {
	*x = RI_SDK_Connector_ExtendParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_ExtendParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_ExtendParams) ProtoMessage() {}

func (x *RI_SDK_Connector_ExtendParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_ExtendParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_ExtendParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{45}
}

func (x *RI_SDK_Connector_ExtendParams) GetBasic() int64 {
	if x != nil {
		return x.Basic
	}
	return 0
}

// Возвращаемые значения RI_SDK_Connector_Extend
type RI_SDK_Connector_ExtendReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desrciptor int64  `protobuf:"varint,1,opt,name=desrciptor,proto3" json:"desrciptor,omitempty"`
	ErrorText  string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode  int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Connector_ExtendReturn) Reset() {
	*x = RI_SDK_Connector_ExtendReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Connector_ExtendReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Connector_ExtendReturn) ProtoMessage() {}

func (x *RI_SDK_Connector_ExtendReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Connector_ExtendReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Connector_ExtendReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{46}
}

func (x *RI_SDK_Connector_ExtendReturn) GetDesrciptor() int64 {
	if x != nil {
		return x.Desrciptor
	}
	return 0
}

func (x *RI_SDK_Connector_ExtendReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Connector_ExtendReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Sigmod_PWM_Extend
type RI_SDK_Sigmod_PWM_ExtendParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Con int64 `protobuf:"varint,1,opt,name=con,proto3" json:"con,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_ExtendParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_ExtendParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_ExtendParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_ExtendParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_ExtendParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_ExtendParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_ExtendParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{47}
}

func (x *RI_SDK_Sigmod_PWM_ExtendParams) GetCon() int64 {
	if x != nil {
		return x.Con
	}
	return 0
}

// Возвращаемые значения RI_SDK_Sigmod_PWM_Extend
type RI_SDK_Sigmod_PWM_ExtendReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	ErrorText   string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode   int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_ExtendReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_ExtendReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_ExtendReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_ExtendReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_ExtendReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_ExtendReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_ExtendReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{48}
}

func (x *RI_SDK_Sigmod_PWM_ExtendReturn) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_ExtendReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_ExtendReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_ServoDrive_Extend
type RI_SDK_Exec_ServoDrive_ExtendParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exec int64 `protobuf:"varint,1,opt,name=exec,proto3" json:"exec,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_ExtendParams) Reset() {
	*x = RI_SDK_Exec_ServoDrive_ExtendParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_ExtendParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_ExtendParams) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_ExtendParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_ExtendParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_ExtendParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{49}
}

func (x *RI_SDK_Exec_ServoDrive_ExtendParams) GetExec() int64 {
	if x != nil {
		return x.Exec
	}
	return 0
}

// Возвращаемые значения RI_SDK_Exec_ServoDrive_Extend
type RI_SDK_Exec_ServoDrive_ExtendReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	ErrorText   string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode   int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_ExtendReturn) Reset() {
	*x = RI_SDK_Exec_ServoDrive_ExtendReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_ExtendReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_ExtendReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_ExtendReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_ExtendReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_ExtendReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{50}
}

func (x *RI_SDK_Exec_ServoDrive_ExtendReturn) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_ExtendReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_ServoDrive_ExtendReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_RGB_LED_Extend
type RI_SDK_Exec_RGB_LED_ExtendParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Exec int64 `protobuf:"varint,1,opt,name=exec,proto3" json:"exec,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_ExtendParams) Reset() {
	*x = RI_SDK_Exec_RGB_LED_ExtendParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_ExtendParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_ExtendParams) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_ExtendParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_ExtendParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_ExtendParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{51}
}

func (x *RI_SDK_Exec_RGB_LED_ExtendParams) GetExec() int64 {
	if x != nil {
		return x.Exec
	}
	return 0
}

// Возвращаемые значения RI_SDK_Exec_RGB_LED_Extend
type RI_SDK_Exec_RGB_LED_ExtendReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	ErrorText   string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode   int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_ExtendReturn) Reset() {
	*x = RI_SDK_Exec_RGB_LED_ExtendReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_ExtendReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_ExtendReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_ExtendReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_ExtendReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_ExtendReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{52}
}

func (x *RI_SDK_Exec_RGB_LED_ExtendReturn) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_ExtendReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_RGB_LED_ExtendReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Sigmod_PWM_GetPortFreqParams
type RI_SDK_Sigmod_PWM_GetPortFreqParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Port        int64 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_GetPortFreqParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_GetPortFreqParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_GetPortFreqParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_GetPortFreqParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_GetPortFreqParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_GetPortFreqParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_GetPortFreqParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{53}
}

func (x *RI_SDK_Sigmod_PWM_GetPortFreqParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_GetPortFreqParams) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

// Возвращаемые значения RI_SDK_sigmod_PWM_GetPortFreqReturn
type RI_SDK_Sigmod_PWM_GetPortFreqReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Freq      int64  `protobuf:"varint,1,opt,name=freq,proto3" json:"freq,omitempty"`
	ErrorText string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_GetPortFreqReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_GetPortFreqReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_GetPortFreqReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_GetPortFreqReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_GetPortFreqReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_GetPortFreqReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_GetPortFreqReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{54}
}

func (x *RI_SDK_Sigmod_PWM_GetPortFreqReturn) GetFreq() int64 {
	if x != nil {
		return x.Freq
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_GetPortFreqReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_GetPortFreqReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_CreateGroupComponent
type RI_SDK_CreateGroupComponentParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
}

func (x *RI_SDK_CreateGroupComponentParams) Reset() {
	*x = RI_SDK_CreateGroupComponentParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_CreateGroupComponentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_CreateGroupComponentParams) ProtoMessage() {}

func (x *RI_SDK_CreateGroupComponentParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_CreateGroupComponentParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_CreateGroupComponentParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{55}
}

func (x *RI_SDK_CreateGroupComponentParams) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

// Возвращаемые значения RI_SDK_CreateGroupComponent
type RI_SDK_CreateGroupComponentReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	ErrorText   string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode   int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_CreateGroupComponentReturn) Reset() {
	*x = RI_SDK_CreateGroupComponentReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_CreateGroupComponentReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_CreateGroupComponentReturn) ProtoMessage() {}

func (x *RI_SDK_CreateGroupComponentReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_CreateGroupComponentReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_CreateGroupComponentReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{56}
}

func (x *RI_SDK_CreateGroupComponentReturn) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_CreateGroupComponentReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_CreateGroupComponentReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_CreateDeviceComponent
type RI_SDK_CreateDeviceComponentParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group  string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Device string `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *RI_SDK_CreateDeviceComponentParams) Reset() {
	*x = RI_SDK_CreateDeviceComponentParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_CreateDeviceComponentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_CreateDeviceComponentParams) ProtoMessage() {}

func (x *RI_SDK_CreateDeviceComponentParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_CreateDeviceComponentParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_CreateDeviceComponentParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{57}
}

func (x *RI_SDK_CreateDeviceComponentParams) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *RI_SDK_CreateDeviceComponentParams) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

// Возвращаемые значения RI_SDK_CreateDeviceComponent
type RI_SDK_CreateDeviceComponentReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	ErrorText   string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode   int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_CreateDeviceComponentReturn) Reset() {
	*x = RI_SDK_CreateDeviceComponentReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_CreateDeviceComponentReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_CreateDeviceComponentReturn) ProtoMessage() {}

func (x *RI_SDK_CreateDeviceComponentReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_CreateDeviceComponentReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_CreateDeviceComponentReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{58}
}

func (x *RI_SDK_CreateDeviceComponentReturn) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_CreateDeviceComponentReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_CreateDeviceComponentReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_CreateModelComponent
type RI_SDK_CreateModelComponentParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group  string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	Device string `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`
	Model  string `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`
}

func (x *RI_SDK_CreateModelComponentParams) Reset() {
	*x = RI_SDK_CreateModelComponentParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_CreateModelComponentParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_CreateModelComponentParams) ProtoMessage() {}

func (x *RI_SDK_CreateModelComponentParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_CreateModelComponentParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_CreateModelComponentParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{59}
}

func (x *RI_SDK_CreateModelComponentParams) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *RI_SDK_CreateModelComponentParams) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *RI_SDK_CreateModelComponentParams) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

// Возвращаемые значения RI_SDK_CreateModelComponent
type RI_SDK_CreateModelComponentReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64  `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	ErrorText   string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode   int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_CreateModelComponentReturn) Reset() {
	*x = RI_SDK_CreateModelComponentReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_CreateModelComponentReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_CreateModelComponentReturn) ProtoMessage() {}

func (x *RI_SDK_CreateModelComponentReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_CreateModelComponentReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_CreateModelComponentReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{60}
}

func (x *RI_SDK_CreateModelComponentReturn) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_CreateModelComponentReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_CreateModelComponentReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_LinkPWMToController
type RI_SDK_LinkPWMToControllerParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PwmDescriptor        int64  `protobuf:"varint,1,opt,name=pwmDescriptor,proto3" json:"pwmDescriptor,omitempty"`
	ControllerDescriptor int64  `protobuf:"varint,2,opt,name=controllerDescriptor,proto3" json:"controllerDescriptor,omitempty"`
	Addr                 uint64 `protobuf:"varint,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *RI_SDK_LinkPWMToControllerParams) Reset() {
	*x = RI_SDK_LinkPWMToControllerParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_LinkPWMToControllerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_LinkPWMToControllerParams) ProtoMessage() {}

func (x *RI_SDK_LinkPWMToControllerParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_LinkPWMToControllerParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_LinkPWMToControllerParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{61}
}

func (x *RI_SDK_LinkPWMToControllerParams) GetPwmDescriptor() int64 {
	if x != nil {
		return x.PwmDescriptor
	}
	return 0
}

func (x *RI_SDK_LinkPWMToControllerParams) GetControllerDescriptor() int64 {
	if x != nil {
		return x.ControllerDescriptor
	}
	return 0
}

func (x *RI_SDK_LinkPWMToControllerParams) GetAddr() uint64 {
	if x != nil {
		return x.Addr
	}
	return 0
}

// Возвращаемые значения RI_SDK_LinkPWMToController
type RI_SDK_LinkPWMToControllerReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_LinkPWMToControllerReturn) Reset() {
	*x = RI_SDK_LinkPWMToControllerReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_LinkPWMToControllerReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_LinkPWMToControllerReturn) ProtoMessage() {}

func (x *RI_SDK_LinkPWMToControllerReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_LinkPWMToControllerReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_LinkPWMToControllerReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{62}
}

func (x *RI_SDK_LinkPWMToControllerReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_LinkPWMToControllerReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_LinkServodriveToController
type RI_SDK_LinkServodriveToControllerParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServodriveDescriptor int64 `protobuf:"varint,1,opt,name=servodriveDescriptor,proto3" json:"servodriveDescriptor,omitempty"`
	PwmDescriptor        int64 `protobuf:"varint,2,opt,name=pwmDescriptor,proto3" json:"pwmDescriptor,omitempty"`
	Port                 int64 `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *RI_SDK_LinkServodriveToControllerParams) Reset() {
	*x = RI_SDK_LinkServodriveToControllerParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_LinkServodriveToControllerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_LinkServodriveToControllerParams) ProtoMessage() {}

func (x *RI_SDK_LinkServodriveToControllerParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_LinkServodriveToControllerParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_LinkServodriveToControllerParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{63}
}

func (x *RI_SDK_LinkServodriveToControllerParams) GetServodriveDescriptor() int64 {
	if x != nil {
		return x.ServodriveDescriptor
	}
	return 0
}

func (x *RI_SDK_LinkServodriveToControllerParams) GetPwmDescriptor() int64 {
	if x != nil {
		return x.PwmDescriptor
	}
	return 0
}

func (x *RI_SDK_LinkServodriveToControllerParams) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

// Возвращаемые значения RI_SDK_LinkServodriveToController
type RI_SDK_LinkServodriveToControllerReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_LinkServodriveToControllerReturn) Reset() {
	*x = RI_SDK_LinkServodriveToControllerReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_LinkServodriveToControllerReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_LinkServodriveToControllerReturn) ProtoMessage() {}

func (x *RI_SDK_LinkServodriveToControllerReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_LinkServodriveToControllerReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_LinkServodriveToControllerReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{64}
}

func (x *RI_SDK_LinkServodriveToControllerReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_LinkServodriveToControllerReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_LinkLedToController
type RI_SDK_LinkLedToControllerParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LedDescriptor int64 `protobuf:"varint,1,opt,name=ledDescriptor,proto3" json:"ledDescriptor,omitempty"`
	PwmDescriptor int64 `protobuf:"varint,2,opt,name=pwmDescriptor,proto3" json:"pwmDescriptor,omitempty"`
	Rport         int64 `protobuf:"varint,3,opt,name=rport,proto3" json:"rport,omitempty"`
	Gport         int64 `protobuf:"varint,4,opt,name=gport,proto3" json:"gport,omitempty"`
	Bport         int64 `protobuf:"varint,5,opt,name=bport,proto3" json:"bport,omitempty"`
}

func (x *RI_SDK_LinkLedToControllerParams) Reset() {
	*x = RI_SDK_LinkLedToControllerParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_LinkLedToControllerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_LinkLedToControllerParams) ProtoMessage() {}

func (x *RI_SDK_LinkLedToControllerParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_LinkLedToControllerParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_LinkLedToControllerParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{65}
}

func (x *RI_SDK_LinkLedToControllerParams) GetLedDescriptor() int64 {
	if x != nil {
		return x.LedDescriptor
	}
	return 0
}

func (x *RI_SDK_LinkLedToControllerParams) GetPwmDescriptor() int64 {
	if x != nil {
		return x.PwmDescriptor
	}
	return 0
}

func (x *RI_SDK_LinkLedToControllerParams) GetRport() int64 {
	if x != nil {
		return x.Rport
	}
	return 0
}

func (x *RI_SDK_LinkLedToControllerParams) GetGport() int64 {
	if x != nil {
		return x.Gport
	}
	return 0
}

func (x *RI_SDK_LinkLedToControllerParams) GetBport() int64 {
	if x != nil {
		return x.Bport
	}
	return 0
}

// Возвращаемые значения RI_SDK_LinkLedToController
type RI_SDK_LinkLedToControllerReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_LinkLedToControllerReturn) Reset() {
	*x = RI_SDK_LinkLedToControllerReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_LinkLedToControllerReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_LinkLedToControllerReturn) ProtoMessage() {}

func (x *RI_SDK_LinkLedToControllerReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_LinkLedToControllerReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_LinkLedToControllerReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{66}
}

func (x *RI_SDK_LinkLedToControllerReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_LinkLedToControllerReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_ServoDrive_CustomDeviceInit
type RI_SDK_Exec_ServoDrive_CustomDeviceInitParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desrciptor int64 `protobuf:"varint,1,opt,name=desrciptor,proto3" json:"desrciptor,omitempty"`
	MaxImpulse int64 `protobuf:"varint,2,opt,name=maxImpulse,proto3" json:"maxImpulse,omitempty"`
	MaxSpeed   int64 `protobuf:"varint,3,opt,name=maxSpeed,proto3" json:"maxSpeed,omitempty"`
	PulseRange int64 `protobuf:"varint,4,opt,name=pulseRange,proto3" json:"pulseRange,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_CustomDeviceInitParams) Reset() {
	*x = RI_SDK_Exec_ServoDrive_CustomDeviceInitParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_CustomDeviceInitParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_CustomDeviceInitParams) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_CustomDeviceInitParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_CustomDeviceInitParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_CustomDeviceInitParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{67}
}

func (x *RI_SDK_Exec_ServoDrive_CustomDeviceInitParams) GetDesrciptor() int64 {
	if x != nil {
		return x.Desrciptor
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_CustomDeviceInitParams) GetMaxImpulse() int64 {
	if x != nil {
		return x.MaxImpulse
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_CustomDeviceInitParams) GetMaxSpeed() int64 {
	if x != nil {
		return x.MaxSpeed
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_CustomDeviceInitParams) GetPulseRange() int64 {
	if x != nil {
		return x.PulseRange
	}
	return 0
}

// Возвращаемые значения RI_SDK_Exec_ServoDrive_CustomDeviceInit
type RI_SDK_Exec_ServoDrive_CustomDeviceInitReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_CustomDeviceInitReturn) Reset() {
	*x = RI_SDK_Exec_ServoDrive_CustomDeviceInitReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_CustomDeviceInitReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_CustomDeviceInitReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_CustomDeviceInitReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_CustomDeviceInitReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_CustomDeviceInitReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{68}
}

func (x *RI_SDK_Exec_ServoDrive_CustomDeviceInitReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_ServoDrive_CustomDeviceInitReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Sigmod_PWM_SetPortFreqParams
type RI_SDK_Sigmod_PWM_SetPortFreqParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Port        int64 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	Freq        int64 `protobuf:"varint,3,opt,name=freq,proto3" json:"freq,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_SetPortFreqParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_SetPortFreqParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_SetPortFreqParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_SetPortFreqParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_SetPortFreqParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_SetPortFreqParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_SetPortFreqParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{69}
}

func (x *RI_SDK_Sigmod_PWM_SetPortFreqParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_SetPortFreqParams) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_SetPortFreqParams) GetFreq() int64 {
	if x != nil {
		return x.Freq
	}
	return 0
}

// Возвращаемые значения RI_SDK_Sigmod_PWM_SetPortFreqReturn
type RI_SDK_Sigmod_PWM_SetPortFreqReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_SetPortFreqReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_SetPortFreqReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_SetPortFreqReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_SetPortFreqReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_SetPortFreqReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_SetPortFreqReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_SetPortFreqReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{70}
}

func (x *RI_SDK_Sigmod_PWM_SetPortFreqReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_SetPortFreqReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_ServoDrive_TurnByDutyCycle
type RI_SDK_Exec_ServoDrive_TurnByDutyCycleParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desrciptor int64 `protobuf:"varint,1,opt,name=desrciptor,proto3" json:"desrciptor,omitempty"`
	Steps      int64 `protobuf:"varint,2,opt,name=steps,proto3" json:"steps,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_TurnByDutyCycleParams) Reset() {
	*x = RI_SDK_Exec_ServoDrive_TurnByDutyCycleParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_TurnByDutyCycleParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_TurnByDutyCycleParams) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_TurnByDutyCycleParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_TurnByDutyCycleParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_TurnByDutyCycleParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{71}
}

func (x *RI_SDK_Exec_ServoDrive_TurnByDutyCycleParams) GetDesrciptor() int64 {
	if x != nil {
		return x.Desrciptor
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_TurnByDutyCycleParams) GetSteps() int64 {
	if x != nil {
		return x.Steps
	}
	return 0
}

// Возвращаемые значения RI_SDK_Exec_ServoDrive_TurnByDutyCycle
type RI_SDK_Exec_ServoDrive_TurnByDutyCycleReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_TurnByDutyCycleReturn) Reset() {
	*x = RI_SDK_Exec_ServoDrive_TurnByDutyCycleReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_TurnByDutyCycleReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_TurnByDutyCycleReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_TurnByDutyCycleReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_TurnByDutyCycleReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_TurnByDutyCycleReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{72}
}

func (x *RI_SDK_Exec_ServoDrive_TurnByDutyCycleReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_ServoDrive_TurnByDutyCycleReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы messageRI_SDK_Sigmod_PWM_ResetAllParams
type RI_SDK_Sigmod_PWM_ResetAllParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_ResetAllParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_ResetAllParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_ResetAllParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_ResetAllParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_ResetAllParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_ResetAllParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_ResetAllParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{73}
}

func (x *RI_SDK_Sigmod_PWM_ResetAllParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

// Возвращаемые значения RI_SDK_Sigmod_PWM_ResetAllReturn
type RI_SDK_Sigmod_PWM_ResetAllReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_ResetAllReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_ResetAllReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_ResetAllReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_ResetAllReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_ResetAllReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_ResetAllReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_ResetAllReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{74}
}

func (x *RI_SDK_Sigmod_PWM_ResetAllReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_ResetAllReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_ServoDrive_TurnByPulse
type RI_SDK_Exec_ServoDrive_TurnByPulseParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desrciptor int64 `protobuf:"varint,1,opt,name=desrciptor,proto3" json:"desrciptor,omitempty"`
	Pulse      int64 `protobuf:"varint,2,opt,name=pulse,proto3" json:"pulse,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_TurnByPulseParams) Reset() {
	*x = RI_SDK_Exec_ServoDrive_TurnByPulseParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_TurnByPulseParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_TurnByPulseParams) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_TurnByPulseParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_TurnByPulseParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_TurnByPulseParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{75}
}

func (x *RI_SDK_Exec_ServoDrive_TurnByPulseParams) GetDesrciptor() int64 {
	if x != nil {
		return x.Desrciptor
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_TurnByPulseParams) GetPulse() int64 {
	if x != nil {
		return x.Pulse
	}
	return 0
}

// Возвращаемые значения RI_SDK_Exec_ServoDrive_TurnByPulse
type RI_SDK_Exec_ServoDrive_TurnByPulseReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_TurnByPulseReturn) Reset() {
	*x = RI_SDK_Exec_ServoDrive_TurnByPulseReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_TurnByPulseReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_TurnByPulseReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_TurnByPulseReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_TurnByPulseReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_TurnByPulseReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{76}
}

func (x *RI_SDK_Exec_ServoDrive_TurnByPulseReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_ServoDrive_TurnByPulseReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Sigmod_PWM_ResetPortParams
type RI_SDK_Sigmod_PWM_ResetPortParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Port        int64 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_ResetPortParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_ResetPortParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_ResetPortParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_ResetPortParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_ResetPortParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_ResetPortParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_ResetPortParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{77}
}

func (x *RI_SDK_Sigmod_PWM_ResetPortParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_ResetPortParams) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

// Возвращаемые значения RI_SDK_Sigmod_PWM_ResetPortReturn
type RI_SDK_Sigmod_PWM_ResetPortReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_ResetPortReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_ResetPortReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_ResetPortReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_ResetPortReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_ResetPortReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_ResetPortReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_ResetPortReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{78}
}

func (x *RI_SDK_Sigmod_PWM_ResetPortReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_ResetPortReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_ServoDrive_GetCurrentAngle
type RI_SDK_Exec_ServoDrive_GetCurrentAngleParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desrciptor int64 `protobuf:"varint,1,opt,name=desrciptor,proto3" json:"desrciptor,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_GetCurrentAngleParams) Reset() {
	*x = RI_SDK_Exec_ServoDrive_GetCurrentAngleParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_GetCurrentAngleParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_GetCurrentAngleParams) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_GetCurrentAngleParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_GetCurrentAngleParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_GetCurrentAngleParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{79}
}

func (x *RI_SDK_Exec_ServoDrive_GetCurrentAngleParams) GetDesrciptor() int64 {
	if x != nil {
		return x.Desrciptor
	}
	return 0
}

// Возвращаемые значения RI_SDK_Exec_ServoDrive_GetCurrentAngle
type RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Angle     int64  `protobuf:"varint,1,opt,name=angle,proto3" json:"angle,omitempty"`
	ErrorText string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn) Reset() {
	*x = RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{80}
}

func (x *RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn) GetAngle() int64 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_ServoDrive_GetState
type RI_SDK_Exec_ServoDrive_GetStateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desrciptor int64 `protobuf:"varint,1,opt,name=desrciptor,proto3" json:"desrciptor,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_GetStateParams) Reset() {
	*x = RI_SDK_Exec_ServoDrive_GetStateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_GetStateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_GetStateParams) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_GetStateParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_GetStateParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_GetStateParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{81}
}

func (x *RI_SDK_Exec_ServoDrive_GetStateParams) GetDesrciptor() int64 {
	if x != nil {
		return x.Desrciptor
	}
	return 0
}

// Возвращаемые значения RI_SDK_Exec_ServoDrive_GetState
type RI_SDK_Exec_ServoDrive_GetStateReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State     int64  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	ErrorText string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_GetStateReturn) Reset() {
	*x = RI_SDK_Exec_ServoDrive_GetStateReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_GetStateReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_GetStateReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_GetStateReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_GetStateReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_GetStateReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{82}
}

func (x *RI_SDK_Exec_ServoDrive_GetStateReturn) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_GetStateReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_ServoDrive_GetStateReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Sigmod_PWM_GetPortDutyCycleParams
type RI_SDK_Sigmod_PWM_GetPortDutyCycleParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Port        int64 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_GetPortDutyCycleParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_GetPortDutyCycleParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_GetPortDutyCycleParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_GetPortDutyCycleParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_GetPortDutyCycleParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_GetPortDutyCycleParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_GetPortDutyCycleParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{83}
}

func (x *RI_SDK_Sigmod_PWM_GetPortDutyCycleParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_GetPortDutyCycleParams) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

// Возвращаемые значения RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn
type RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	On        int64  `protobuf:"varint,1,opt,name=on,proto3" json:"on,omitempty"`
	Off       int64  `protobuf:"varint,2,opt,name=off,proto3" json:"off,omitempty"`
	ErrorText string `protobuf:"bytes,3,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,4,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{84}
}

func (x *RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn) GetOn() int64 {
	if x != nil {
		return x.On
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn) GetOff() int64 {
	if x != nil {
		return x.Off
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Sigmod_PWM_SetPortDutyCycleParams
type RI_SDK_Sigmod_PWM_SetPortDutyCycleParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Port        int64 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	On          int64 `protobuf:"varint,3,opt,name=on,proto3" json:"on,omitempty"`
	Off         int64 `protobuf:"varint,4,opt,name=off,proto3" json:"off,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_SetPortDutyCycleParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_SetPortDutyCycleParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_SetPortDutyCycleParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_SetPortDutyCycleParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_SetPortDutyCycleParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_SetPortDutyCycleParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_SetPortDutyCycleParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{85}
}

func (x *RI_SDK_Sigmod_PWM_SetPortDutyCycleParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_SetPortDutyCycleParams) GetPort() int64 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_SetPortDutyCycleParams) GetOn() int64 {
	if x != nil {
		return x.On
	}
	return 0
}

func (x *RI_SDK_Sigmod_PWM_SetPortDutyCycleParams) GetOff() int64 {
	if x != nil {
		return x.Off
	}
	return 0
}

// Возвращаемые значения RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn
type RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{86}
}

func (x *RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_ServoDrive_MinStepRotate
type RI_SDK_Exec_ServoDrive_MinStepRotateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Direction   int64 `protobuf:"varint,2,opt,name=direction,proto3" json:"direction,omitempty"`
	Speed       int64 `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Async       bool  `protobuf:"varint,4,opt,name=async,proto3" json:"async,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_MinStepRotateParams) Reset() {
	*x = RI_SDK_Exec_ServoDrive_MinStepRotateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_MinStepRotateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_MinStepRotateParams) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_MinStepRotateParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_MinStepRotateParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_MinStepRotateParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{87}
}

func (x *RI_SDK_Exec_ServoDrive_MinStepRotateParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_MinStepRotateParams) GetDirection() int64 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_MinStepRotateParams) GetSpeed() int64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_MinStepRotateParams) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

// Возвращаемые значения RI_SDK_Exec_ServoDrive_MinStepRotate
type RI_SDK_Exec_ServoDrive_MinStepRotateReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_MinStepRotateReturn) Reset() {
	*x = RI_SDK_Exec_ServoDrive_MinStepRotateReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_MinStepRotateReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_MinStepRotateReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_MinStepRotateReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_MinStepRotateReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_MinStepRotateReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{88}
}

func (x *RI_SDK_Exec_ServoDrive_MinStepRotateReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_ServoDrive_MinStepRotateReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_ServoDrive_Turn
type RI_SDK_Exec_ServoDrive_TurnParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Angle       int64 `protobuf:"varint,2,opt,name=angle,proto3" json:"angle,omitempty"`
	Speed       int64 `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Async       bool  `protobuf:"varint,4,opt,name=async,proto3" json:"async,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_TurnParams) Reset() {
	*x = RI_SDK_Exec_ServoDrive_TurnParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_TurnParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_TurnParams) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_TurnParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_TurnParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_TurnParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{89}
}

func (x *RI_SDK_Exec_ServoDrive_TurnParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_TurnParams) GetAngle() int64 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_TurnParams) GetSpeed() int64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_TurnParams) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

// Возвращаемые значения RI_SDK_Exec_ServoDrive_Turn
type RI_SDK_Exec_ServoDrive_TurnReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_TurnReturn) Reset() {
	*x = RI_SDK_Exec_ServoDrive_TurnReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_TurnReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_TurnReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_TurnReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_TurnReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_TurnReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{90}
}

func (x *RI_SDK_Exec_ServoDrive_TurnReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_ServoDrive_TurnReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_ServoDrive_Stop
type RI_SDK_Exec_ServoDrive_StopParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_StopParams) Reset() {
	*x = RI_SDK_Exec_ServoDrive_StopParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_StopParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_StopParams) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_StopParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_StopParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_StopParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{91}
}

func (x *RI_SDK_Exec_ServoDrive_StopParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

// Возвращаемые значения RI_SDK_Exec_ServoDrive_Stop
type RI_SDK_Exec_ServoDrive_StopReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_StopReturn) Reset() {
	*x = RI_SDK_Exec_ServoDrive_StopReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_StopReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_StopReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_StopReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_StopReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_StopReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{92}
}

func (x *RI_SDK_Exec_ServoDrive_StopReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_ServoDrive_StopReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_ServoDrive_Rotate
type RI_SDK_Exec_ServoDrive_RotateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Direction   int64 `protobuf:"varint,2,opt,name=direction,proto3" json:"direction,omitempty"`
	Speed       int64 `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Async       bool  `protobuf:"varint,4,opt,name=async,proto3" json:"async,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_RotateParams) Reset() {
	*x = RI_SDK_Exec_ServoDrive_RotateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_RotateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_RotateParams) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_RotateParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_RotateParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_RotateParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{93}
}

func (x *RI_SDK_Exec_ServoDrive_RotateParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_RotateParams) GetDirection() int64 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_RotateParams) GetSpeed() int64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_RotateParams) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

// Возвращаемые значения RI_SDK_Exec_ServoDrive_Rotate
type RI_SDK_Exec_ServoDrive_RotateReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_RotateReturn) Reset() {
	*x = RI_SDK_Exec_ServoDrive_RotateReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_RotateReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_RotateReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_RotateReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_RotateReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_RotateReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{94}
}

func (x *RI_SDK_Exec_ServoDrive_RotateReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_ServoDrive_RotateReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeed
type RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Direction   int64 `protobuf:"varint,2,opt,name=direction,proto3" json:"direction,omitempty"`
	Speed       int64 `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Async       bool  `protobuf:"varint,4,opt,name=async,proto3" json:"async,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams) Reset() {
	*x = RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{95}
}

func (x *RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams) GetDirection() int64 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams) GetSpeed() int64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

// Возвращаемые значения RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeed
type RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedReturn) Reset() {
	*x = RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{96}
}

func (x *RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeed
type RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	Angle       int64 `protobuf:"varint,2,opt,name=angle,proto3" json:"angle,omitempty"`
	Speed       int64 `protobuf:"varint,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Async       bool  `protobuf:"varint,4,opt,name=async,proto3" json:"async,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams) Reset() {
	*x = RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{97}
}

func (x *RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams) GetAngle() int64 {
	if x != nil {
		return x.Angle
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams) GetSpeed() int64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

// Возвращаемые значения RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeed
type RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedReturn) Reset() {
	*x = RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{98}
}

func (x *RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_RGB_LED_SinglePulse
type RI_SDK_Exec_RGB_LED_SinglePulseParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	R           int64 `protobuf:"varint,2,opt,name=r,proto3" json:"r,omitempty"`
	G           int64 `protobuf:"varint,3,opt,name=g,proto3" json:"g,omitempty"`
	B           int64 `protobuf:"varint,4,opt,name=b,proto3" json:"b,omitempty"`
	Duration    int64 `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Async       bool  `protobuf:"varint,6,opt,name=async,proto3" json:"async,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_SinglePulseParams) Reset() {
	*x = RI_SDK_Exec_RGB_LED_SinglePulseParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_SinglePulseParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_SinglePulseParams) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_SinglePulseParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_SinglePulseParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_SinglePulseParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{99}
}

func (x *RI_SDK_Exec_RGB_LED_SinglePulseParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_SinglePulseParams) GetR() int64 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_SinglePulseParams) GetG() int64 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_SinglePulseParams) GetB() int64 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_SinglePulseParams) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_SinglePulseParams) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

// Возвращаемые значения RI_SDK_Exec_RGB_LED_SinglePulse
type RI_SDK_Exec_RGB_LED_SinglePulseReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_SinglePulseReturn) Reset() {
	*x = RI_SDK_Exec_RGB_LED_SinglePulseReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_SinglePulseReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_SinglePulseReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_SinglePulseReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_SinglePulseReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_SinglePulseReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{100}
}

func (x *RI_SDK_Exec_RGB_LED_SinglePulseReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_RGB_LED_SinglePulseReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_RGB_LED_Stop
type RI_SDK_Exec_RGB_LED_StopParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_StopParams) Reset() {
	*x = RI_SDK_Exec_RGB_LED_StopParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_StopParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_StopParams) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_StopParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_StopParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_StopParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{101}
}

func (x *RI_SDK_Exec_RGB_LED_StopParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

// Возвращаемые значения RI_SDK_Exec_RGB_LED_Stop
type RI_SDK_Exec_RGB_LED_StopReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_StopReturn) Reset() {
	*x = RI_SDK_Exec_RGB_LED_StopReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_StopReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_StopReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_StopReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_StopReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_StopReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{102}
}

func (x *RI_SDK_Exec_RGB_LED_StopReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_RGB_LED_StopReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_RGB_LED_GetState
type RI_SDK_Exec_RGB_LED_GetStateParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_GetStateParams) Reset() {
	*x = RI_SDK_Exec_RGB_LED_GetStateParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_GetStateParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_GetStateParams) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_GetStateParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_GetStateParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_GetStateParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{103}
}

func (x *RI_SDK_Exec_RGB_LED_GetStateParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

// Возвращаемые значения RI_SDK_Exec_RGB_LED_GetState
type RI_SDK_Exec_RGB_LED_GetStateReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State     int64  `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	ErrorText string `protobuf:"bytes,2,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,3,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_GetStateReturn) Reset() {
	*x = RI_SDK_Exec_RGB_LED_GetStateReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_GetStateReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_GetStateReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_GetStateReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_GetStateReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_GetStateReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{104}
}

func (x *RI_SDK_Exec_RGB_LED_GetStateReturn) GetState() int64 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_GetStateReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_RGB_LED_GetStateReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_RGB_LED_GetColor
type RI_SDK_Exec_RGB_LED_GetColorParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_GetColorParams) Reset() {
	*x = RI_SDK_Exec_RGB_LED_GetColorParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_GetColorParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_GetColorParams) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_GetColorParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_GetColorParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_GetColorParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{105}
}

func (x *RI_SDK_Exec_RGB_LED_GetColorParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

// Возвращаемые значения RI_SDK_Exec_RGB_LED_GetColor
type RI_SDK_Exec_RGB_LED_GetColorReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	R         int64  `protobuf:"varint,1,opt,name=r,proto3" json:"r,omitempty"`
	G         int64  `protobuf:"varint,2,opt,name=g,proto3" json:"g,omitempty"`
	B         int64  `protobuf:"varint,3,opt,name=b,proto3" json:"b,omitempty"`
	ErrorText string `protobuf:"bytes,4,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,5,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_GetColorReturn) Reset() {
	*x = RI_SDK_Exec_RGB_LED_GetColorReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_GetColorReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_GetColorReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_GetColorReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_GetColorReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_GetColorReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{106}
}

func (x *RI_SDK_Exec_RGB_LED_GetColorReturn) GetR() int64 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_GetColorReturn) GetG() int64 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_GetColorReturn) GetB() int64 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_GetColorReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_RGB_LED_GetColorReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Sigmod_PWM_CloseParams
type RI_SDK_Sigmod_PWM_CloseParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_CloseParams) Reset() {
	*x = RI_SDK_Sigmod_PWM_CloseParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_CloseParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_CloseParams) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_CloseParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_CloseParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_CloseParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{107}
}

func (x *RI_SDK_Sigmod_PWM_CloseParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

// Возвращаемые значения RI_SDK_Sigmod_PWM_CloseReturn
type RI_SDK_Sigmod_PWM_CloseReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Sigmod_PWM_CloseReturn) Reset() {
	*x = RI_SDK_Sigmod_PWM_CloseReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Sigmod_PWM_CloseReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Sigmod_PWM_CloseReturn) ProtoMessage() {}

func (x *RI_SDK_Sigmod_PWM_CloseReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Sigmod_PWM_CloseReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Sigmod_PWM_CloseReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{108}
}

func (x *RI_SDK_Sigmod_PWM_CloseReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Sigmod_PWM_CloseReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_RGB_LED_FlashingWithFrequency
type RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	R           int64 `protobuf:"varint,2,opt,name=r,proto3" json:"r,omitempty"`
	G           int64 `protobuf:"varint,3,opt,name=g,proto3" json:"g,omitempty"`
	B           int64 `protobuf:"varint,4,opt,name=b,proto3" json:"b,omitempty"`
	Frequency   int64 `protobuf:"varint,5,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Qty         int64 `protobuf:"varint,6,opt,name=qty,proto3" json:"qty,omitempty"`
	Async       bool  `protobuf:"varint,7,opt,name=async,proto3" json:"async,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams) Reset() {
	*x = RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{109}
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams) GetR() int64 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams) GetG() int64 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams) GetB() int64 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams) GetFrequency() int64 {
	if x != nil {
		return x.Frequency
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams) GetQty() int64 {
	if x != nil {
		return x.Qty
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

// Возвращаемые значения RI_SDK_Exec_RGB_LED_FlashingWithFrequency
type RI_SDK_Exec_RGB_LED_FlashingWithFrequencyReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyReturn) Reset() {
	*x = RI_SDK_Exec_RGB_LED_FlashingWithFrequencyReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_FlashingWithFrequencyReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_FlashingWithFrequencyReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_FlashingWithFrequencyReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{110}
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithFrequencyReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_RGB_LED_FlashingWithPause
type RI_SDK_Exec_RGB_LED_FlashingWithPauseParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	R           int64 `protobuf:"varint,2,opt,name=r,proto3" json:"r,omitempty"`
	G           int64 `protobuf:"varint,3,opt,name=g,proto3" json:"g,omitempty"`
	B           int64 `protobuf:"varint,4,opt,name=b,proto3" json:"b,omitempty"`
	Duration    int64 `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Pause       int64 `protobuf:"varint,6,opt,name=pause,proto3" json:"pause,omitempty"`
	Qty         int64 `protobuf:"varint,7,opt,name=qty,proto3" json:"qty,omitempty"`
	Async       bool  `protobuf:"varint,8,opt,name=async,proto3" json:"async,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseParams) Reset() {
	*x = RI_SDK_Exec_RGB_LED_FlashingWithPauseParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_FlashingWithPauseParams) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_FlashingWithPauseParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_FlashingWithPauseParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{111}
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseParams) GetR() int64 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseParams) GetG() int64 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseParams) GetB() int64 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseParams) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseParams) GetPause() int64 {
	if x != nil {
		return x.Pause
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseParams) GetQty() int64 {
	if x != nil {
		return x.Qty
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseParams) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

// Возвращаемые значения RI_SDK_Exec_RGB_LED_FlashingWithPause
type RI_SDK_Exec_RGB_LED_FlashingWithPauseReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseReturn) Reset() {
	*x = RI_SDK_Exec_RGB_LED_FlashingWithPauseReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_FlashingWithPauseReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_FlashingWithPauseReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_FlashingWithPauseReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{112}
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_RGB_LED_FlashingWithPauseReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

// Аргументы RI_SDK_Exec_RGB_LED_Flicker
type RI_SDK_Exec_RGB_LED_FlickerParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Descriptor_ int64 `protobuf:"varint,1,opt,name=descriptor,proto3" json:"descriptor,omitempty"`
	R           int64 `protobuf:"varint,2,opt,name=r,proto3" json:"r,omitempty"`
	G           int64 `protobuf:"varint,3,opt,name=g,proto3" json:"g,omitempty"`
	B           int64 `protobuf:"varint,4,opt,name=b,proto3" json:"b,omitempty"`
	Duration    int64 `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	Qty         int64 `protobuf:"varint,6,opt,name=qty,proto3" json:"qty,omitempty"`
	Async       bool  `protobuf:"varint,7,opt,name=async,proto3" json:"async,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_FlickerParams) Reset() {
	*x = RI_SDK_Exec_RGB_LED_FlickerParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_FlickerParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_FlickerParams) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_FlickerParams) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_FlickerParams.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_FlickerParams) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{113}
}

func (x *RI_SDK_Exec_RGB_LED_FlickerParams) GetDescriptor_() int64 {
	if x != nil {
		return x.Descriptor_
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlickerParams) GetR() int64 {
	if x != nil {
		return x.R
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlickerParams) GetG() int64 {
	if x != nil {
		return x.G
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlickerParams) GetB() int64 {
	if x != nil {
		return x.B
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlickerParams) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlickerParams) GetQty() int64 {
	if x != nil {
		return x.Qty
	}
	return 0
}

func (x *RI_SDK_Exec_RGB_LED_FlickerParams) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

// Возвращаемые значения RI_SDK_Exec_RGB_LED_Flicker
type RI_SDK_Exec_RGB_LED_FlickerReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorText string `protobuf:"bytes,1,opt,name=errorText,proto3" json:"errorText,omitempty"`
	ErrorCode int64  `protobuf:"varint,2,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
}

func (x *RI_SDK_Exec_RGB_LED_FlickerReturn) Reset() {
	*x = RI_SDK_Exec_RGB_LED_FlickerReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RoboSdk_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RI_SDK_Exec_RGB_LED_FlickerReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RI_SDK_Exec_RGB_LED_FlickerReturn) ProtoMessage() {}

func (x *RI_SDK_Exec_RGB_LED_FlickerReturn) ProtoReflect() protoreflect.Message {
	mi := &file_RoboSdk_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RI_SDK_Exec_RGB_LED_FlickerReturn.ProtoReflect.Descriptor instead.
func (*RI_SDK_Exec_RGB_LED_FlickerReturn) Descriptor() ([]byte, []int) {
	return file_RoboSdk_proto_rawDescGZIP(), []int{114}
}

func (x *RI_SDK_Exec_RGB_LED_FlickerReturn) GetErrorText() string {
	if x != nil {
		return x.ErrorText
	}
	return ""
}

func (x *RI_SDK_Exec_RGB_LED_FlickerReturn) GetErrorCode() int64 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

var File_RoboSdk_proto protoreflect.FileDescriptor

var file_RoboSdk_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x52, 0x6f, 0x62, 0x6f, 0x53, 0x64, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x14, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x44, 0x4b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6c, 0x6f, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x52, 0x0a, 0x14, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3a,
	0x0a, 0x18, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x76, 0x0a, 0x18, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x3f, 0x0a, 0x1d, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x44, 0x65, 0x73,
	0x74, 0x72, 0x6f, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x22, 0x5b, 0x0a, 0x1d, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x33, 0x0a, 0x17, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x53, 0x44, 0x4b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x73, 0x46, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x46, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x55, 0x0a, 0x17, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x55, 0x0a, 0x1f,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x49, 0x32, 0x43, 0x5f, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x22, 0x5d, 0x0a, 0x1f, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x4f, 0x70, 0x65, 0x6e,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x55, 0x0a, 0x21, 0x52,
	0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x49, 0x32, 0x43, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x22, 0x7f, 0x0a, 0x21, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x42, 0x0a, 0x20, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x74, 0x0a, 0x20, 0x52, 0x49, 0x5f, 0x53, 0x44,
	0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x45, 0x0a,
	0x23, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x41, 0x6c, 0x6c, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x22, 0x61, 0x0a, 0x23, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x56, 0x0a, 0x20, 0x52, 0x49, 0x5f, 0x53, 0x44,
	0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22,
	0x5e, 0x0a, 0x20, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x7f, 0x0a, 0x25, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x62, 0x75, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x62, 0x75, 0x66, 0x12, 0x10,
	0x0a, 0x03, 0x6c, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6c, 0x65, 0x6e,
	0x22, 0x89, 0x01, 0x0a, 0x25, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x72,
	0x6f, 0x74, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x77, 0x72, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x65, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6c, 0x0a, 0x24,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x49, 0x32, 0x43, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x75, 0x66, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x62, 0x75, 0x66, 0x22, 0x8a, 0x01, 0x0a, 0x24, 0x52,
	0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x49, 0x32, 0x43, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x65,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x64, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x4c, 0x65, 0x6e, 0x22, 0x70, 0x0a, 0x24, 0x52, 0x49, 0x5f, 0x53, 0x44,
	0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x42, 0x79, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x62, 0x0a, 0x24, 0x52, 0x49, 0x5f,
	0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32,
	0x43, 0x5f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42, 0x79, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x59, 0x0a,
	0x23, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x42, 0x79, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x22, 0x77, 0x0a, 0x23, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43,
	0x5f, 0x52, 0x65, 0x61, 0x64, 0x42, 0x79, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x83, 0x01, 0x0a, 0x25, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67,
	0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c,
	0x75, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x84, 0x01, 0x0a, 0x26, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x41,
	0x0a, 0x1f, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f,
	0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x65, 0x71, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x22, 0x71, 0x0a, 0x1f, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d,
	0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x65, 0x71, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x55, 0x0a, 0x1f, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53,
	0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x72, 0x65,
	0x71, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x71, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x65, 0x71, 0x22, 0x5d, 0x0a, 0x1f, 0x52,
	0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d,
	0x5f, 0x53, 0x65, 0x74, 0x46, 0x72, 0x65, 0x71, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6b, 0x0a, 0x25, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x67, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x72, 0x65, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x75, 0x66, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x03, 0x62, 0x75, 0x66, 0x22, 0x89, 0x01, 0x0a, 0x25, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x67, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x72, 0x6f, 0x74, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4c,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x77, 0x72, 0x6f, 0x74, 0x65, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x4c, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x6a, 0x0a, 0x24, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69,
	0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x67,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x65, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x62, 0x75, 0x66, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x62, 0x75, 0x66, 0x22,
	0x8a, 0x01, 0x0a, 0x24, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f,
	0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x67, 0x42, 0x79, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64,
	0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x65, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x4c, 0x65, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x6e, 0x0a, 0x24,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57,
	0x4d, 0x5f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x67, 0x42, 0x79, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x72, 0x65, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x62, 0x0a, 0x24,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57,
	0x4d, 0x5f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x67, 0x42, 0x79, 0x74, 0x65, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x57, 0x0a, 0x23, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f,
	0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x67, 0x42, 0x79, 0x74,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x72, 0x65, 0x67, 0x22, 0x77, 0x0a, 0x23, 0x52, 0x49, 0x5f,
	0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x67, 0x42, 0x79, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x34, 0x0a, 0x1c, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x22, 0x7a, 0x0a, 0x1c, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x72,
	0x63, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65,
	0x73, 0x72, 0x63, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x3d, 0x0a, 0x1b, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x72, 0x63, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x72, 0x63, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x22, 0x6f, 0x0a, 0x1b, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x35, 0x0a, 0x1d, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x61, 0x73, 0x69, 0x63, 0x22, 0x7b, 0x0a, 0x1d, 0x52,
	0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x73, 0x72, 0x63, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x64, 0x65, 0x73, 0x72, 0x63, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x32, 0x0a, 0x1e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x6f, 0x6e, 0x22, 0x7c, 0x0a, 0x1e,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57,
	0x4d, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x39, 0x0a, 0x23, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x65, 0x78, 0x65, 0x63, 0x22, 0x81, 0x01, 0x0a, 0x23, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x36, 0x0a, 0x20, 0x52, 0x49, 0x5f,
	0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44,
	0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x65, 0x78, 0x65, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x65, 0x78, 0x65,
	0x63, 0x22, 0x7e, 0x0a, 0x20, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63,
	0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x59, 0x0a, 0x23, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d,
	0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x72,
	0x65, 0x71, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x75, 0x0a, 0x23,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57,
	0x4d, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x65, 0x71, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x66, 0x72, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x39, 0x0a, 0x21, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x7f,
	0x0a, 0x21, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x52, 0x0a, 0x22, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x22, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x67, 0x0a, 0x21, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22,
	0x7f, 0x0a, 0x21, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x90, 0x01, 0x0a, 0x20, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x4c, 0x69, 0x6e, 0x6b,
	0x50, 0x57, 0x4d, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x77, 0x6d, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x77,
	0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x14, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x61,
	0x64, 0x64, 0x72, 0x22, 0x5e, 0x0a, 0x20, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x4c, 0x69,
	0x6e, 0x6b, 0x50, 0x57, 0x4d, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x27, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x4c,
	0x69, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12,
	0x32, 0x0a, 0x14, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x73,
	0x65, 0x72, 0x76, 0x6f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x77, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x77, 0x6d, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x65, 0x0a,
	0x27, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76,
	0x6f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0xb0, 0x01, 0x0a, 0x20, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x65, 0x64,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6c, 0x65, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12,
	0x24, 0x0a, 0x0d, 0x70, 0x77, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x77, 0x6d, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x67, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x62, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x5e, 0x0a, 0x20, 0x52, 0x49, 0x5f, 0x53, 0x44,
	0x4b, 0x5f, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xab, 0x01, 0x0a, 0x2d, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x6e, 0x69, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73,
	0x72, 0x63, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64,
	0x65, 0x73, 0x72, 0x63, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78,
	0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d,
	0x61, 0x78, 0x49, 0x6d, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x75, 0x6c, 0x73, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x6b, 0x0a, 0x2d, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x6d, 0x0a, 0x23, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67,
	0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x46,
	0x72, 0x65, 0x71, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x65,
	0x71, 0x22, 0x61, 0x0a, 0x23, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d,
	0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x72,
	0x65, 0x71, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x64, 0x0a, 0x2c, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45,
	0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x54,
	0x75, 0x72, 0x6e, 0x42, 0x79, 0x44, 0x75, 0x74, 0x79, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x72, 0x63, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x72, 0x63, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x22, 0x6a, 0x0a, 0x2c, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x5f, 0x54, 0x75, 0x72, 0x6e, 0x42, 0x79, 0x44, 0x75, 0x74, 0x79, 0x43,
	0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x42, 0x0a, 0x20, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x5e, 0x0a, 0x20, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f,
	0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x60, 0x0a, 0x28, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x5f, 0x54, 0x75, 0x72, 0x6e, 0x42, 0x79, 0x50, 0x75, 0x6c, 0x73, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x72, 0x63, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x72,
	0x63, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x75, 0x6c, 0x73, 0x65, 0x22, 0x66, 0x0a, 0x28,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76,
	0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x54, 0x75, 0x72, 0x6e, 0x42, 0x79, 0x50, 0x75, 0x6c,
	0x73, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0x57, 0x0a, 0x21, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53,
	0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x5f, 0x0a,
	0x21, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50,
	0x57, 0x4d, 0x5f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4e,
	0x0a, 0x2c, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65,
	0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x73, 0x72, 0x63, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x72, 0x63, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x80,
	0x01, 0x0a, 0x2c, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53,
	0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x47, 0x0a, 0x25, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63,
	0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x73, 0x72, 0x63, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x64, 0x65, 0x73, 0x72, 0x63, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x79, 0x0a, 0x25, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x5e, 0x0a, 0x28, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x44, 0x75, 0x74, 0x79, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x88, 0x01, 0x0a, 0x28, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x44, 0x75, 0x74, 0x79, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x66, 0x66, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6f, 0x66, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x80, 0x01, 0x0a, 0x28, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d,
	0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x75,
	0x74, 0x79, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x66, 0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6f, 0x66, 0x66, 0x22, 0x66, 0x0a, 0x28, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69,
	0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74,
	0x44, 0x75, 0x74, 0x79, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x2a,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76,
	0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x4d, 0x69, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x6f,
	0x74, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61,
	0x73, 0x79, 0x6e, 0x63, 0x22, 0x68, 0x0a, 0x2a, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45,
	0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x4d,
	0x69, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x85,
	0x01, 0x0a, 0x21, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53,
	0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x54, 0x75, 0x72, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70,
	0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x22, 0x5f, 0x0a, 0x21, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x5f, 0x54, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x43, 0x0a, 0x21, 0x52, 0x49, 0x5f, 0x53, 0x44,
	0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x5f, 0x0a, 0x21,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76,
	0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x8f, 0x01,
	0x0a, 0x23, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65,
	0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x79,
	0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x22,
	0x61, 0x0a, 0x23, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53,
	0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x34, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78,
	0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x52, 0x6f,
	0x74, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x61, 0x73, 0x79, 0x6e, 0x63, 0x22, 0x72, 0x0a, 0x34, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f,
	0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x32, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x5f, 0x54, 0x75, 0x72, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x61, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x73, 0x79,
	0x6e, 0x63, 0x22, 0x70, 0x0a, 0x32, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65,
	0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x54, 0x75, 0x72,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x70, 0x65,
	0x65, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x25, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x53, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x0c,
	0x0a, 0x01, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x72, 0x12, 0x0c, 0x0a, 0x01,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x22, 0x63, 0x0a, 0x25, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45,
	0x44, 0x5f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x40, 0x0a, 0x1e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52,
	0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x22, 0x5c, 0x0a, 0x1e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63,
	0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22,
	0x44, 0x0a, 0x22, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52,
	0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x22, 0x76, 0x0a, 0x22, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x44, 0x0a,
	0x22, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42,
	0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x22, 0x8a, 0x01, 0x0a, 0x22, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45,
	0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x01, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x01, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x3f, 0x0a, 0x1d, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f,
	0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x22, 0x5b, 0x0a, 0x1d, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d,
	0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0xc1,
	0x01, 0x0a, 0x2f, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52,
	0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x57,
	0x69, 0x74, 0x68, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x72,
	0x12, 0x0c, 0x0a, 0x01, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x67, 0x12, 0x0c,
	0x0a, 0x01, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x62, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x66, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x71, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x73, 0x79,
	0x6e, 0x63, 0x22, 0x6d, 0x0a, 0x2f, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65,
	0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x57, 0x69, 0x74, 0x68, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0xd1, 0x01, 0x0a, 0x2b, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65,
	0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x69,
	0x6e, 0x67, 0x57, 0x69, 0x74, 0x68, 0x50, 0x61, 0x75, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x72, 0x12,
	0x0c, 0x0a, 0x01, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x67, 0x12, 0x0c, 0x0a,
	0x01, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x71, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x61, 0x73, 0x79, 0x6e, 0x63, 0x22, 0x69, 0x0a, 0x2b, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x74, 0x68, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0xb1, 0x01, 0x0a, 0x21, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63,
	0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x6c, 0x69, 0x63, 0x6b, 0x65, 0x72,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x01, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x01, 0x67, 0x12, 0x0c, 0x0a, 0x01, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x01, 0x62,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x71, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x71, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61,
	0x73, 0x79, 0x6e, 0x63, 0x22, 0x5f, 0x0a, 0x21, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45,
	0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x6c, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x32, 0xe9, 0x35, 0x0a, 0x07, 0x52, 0x6f, 0x62, 0x6f, 0x53, 0x64,
	0x6b, 0x12, 0x4a, 0x0a, 0x0e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x49, 0x6e, 0x69, 0x74,
	0x53, 0x44, 0x4b, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x49, 0x6e, 0x69, 0x74, 0x53, 0x44, 0x4b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x49, 0x6e, 0x69, 0x74, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x56, 0x0a,
	0x12, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61,
	0x73, 0x69, 0x63, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f,
	0x53, 0x44, 0x4b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x65, 0x0a, 0x17, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x53, 0x0a, 0x11,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x44,
	0x4b, 0x12, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x44, 0x4b, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x53, 0x44, 0x4b, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x12, 0x71, 0x0a, 0x1b, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x12, 0x74, 0x0a, 0x1c, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f,
	0x53, 0x44, 0x4b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x71, 0x0a, 0x1b, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x6e, 0x0a,
	0x1a, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x57, 0x4d, 0x54,
	0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x4c, 0x69, 0x6e, 0x6b, 0x50,
	0x57, 0x4d, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f,
	0x53, 0x44, 0x4b, 0x5f, 0x4c, 0x69, 0x6e, 0x6b, 0x50, 0x57, 0x4d, 0x54, 0x6f, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x83, 0x01,
	0x0a, 0x21, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x72,
	0x76, 0x6f, 0x64, 0x72, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x6c, 0x65, 0x72, 0x12, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x4c, 0x69, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x12, 0x6e, 0x0a, 0x1a, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x4c, 0x69,
	0x6e, 0x6b, 0x4c, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65,
	0x72, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x65, 0x64, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
	0x6c, 0x6c, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x4c, 0x69, 0x6e, 0x6b, 0x4c, 0x65,
	0x64, 0x54, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x12, 0x62, 0x0a, 0x16, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x23, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44,
	0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x5f, 0x0a, 0x15, 0x52, 0x49, 0x5f, 0x53, 0x44,
	0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f,
	0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x65, 0x0a, 0x17, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12,
	0x6b, 0x0a, 0x19, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f,
	0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32,
	0x43, 0x5f, 0x4f, 0x70, 0x65, 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x71, 0x0a, 0x1b,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x49, 0x32, 0x43, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x28, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49,
	0x32, 0x43, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12,
	0x6e, 0x0a, 0x1a, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x49, 0x32, 0x43, 0x5f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12,
	0x77, 0x0a, 0x1d, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x41, 0x6c, 0x6c,
	0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x6e, 0x0a, 0x1a, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43,
	0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x49, 0x32, 0x43, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x7d, 0x0a, 0x1f, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43,
	0x5f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42, 0x79, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x7a, 0x0a, 0x1e, 0x52, 0x49, 0x5f, 0x53, 0x44,
	0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f,
	0x52, 0x65, 0x61, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f,
	0x49, 0x32, 0x43, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x12, 0x7a, 0x0a, 0x1e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x57, 0x72, 0x69, 0x74,
	0x65, 0x42, 0x79, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49,
	0x32, 0x43, 0x5f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42, 0x79, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44,
	0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x42, 0x79, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12,
	0x77, 0x0a, 0x1d, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x42, 0x79, 0x74, 0x65,
	0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x52, 0x65,
	0x61, 0x64, 0x42, 0x79, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x49, 0x32, 0x43, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x42, 0x79,
	0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x7e, 0x0a, 0x1f, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f,
	0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f,
	0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x6b, 0x0a, 0x19, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65,
	0x74, 0x46, 0x72, 0x65, 0x71, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f,
	0x47, 0x65, 0x74, 0x46, 0x72, 0x65, 0x71, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x26, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67,
	0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65, 0x74, 0x46, 0x72, 0x65, 0x71, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x6b, 0x0a, 0x19, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x72,
	0x65, 0x71, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44,
	0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x53, 0x65, 0x74,
	0x46, 0x72, 0x65, 0x71, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64,
	0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x53, 0x65, 0x74, 0x46, 0x72, 0x65, 0x71, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x7d, 0x0a, 0x1f, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67,
	0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x67,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f,
	0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x67, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x57, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x67, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x12, 0x7a, 0x0a, 0x1e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d,
	0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x52, 0x65, 0x67, 0x42, 0x79,
	0x74, 0x65, 0x73, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52, 0x65,
	0x61, 0x64, 0x52, 0x65, 0x67, 0x42, 0x79, 0x74, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x67, 0x42, 0x79, 0x74, 0x65, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x77, 0x0a,
	0x1b, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50,
	0x57, 0x4d, 0x5f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x42, 0x79, 0x74, 0x65, 0x12, 0x2b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d,
	0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x67, 0x42,
	0x79, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f,
	0x50, 0x57, 0x4d, 0x5f, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x67, 0x42, 0x79, 0x74, 0x65,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x74, 0x0a, 0x1a, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52, 0x65, 0x61, 0x64,
	0x42, 0x79, 0x74, 0x65, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f,
	0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52,
	0x65, 0x61, 0x64, 0x52, 0x65, 0x67, 0x42, 0x79, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52, 0x65, 0x61, 0x64, 0x52,
	0x65, 0x67, 0x42, 0x79, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x68, 0x0a, 0x18,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57,
	0x4d, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50,
	0x57, 0x4d, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53,
	0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x77, 0x0a, 0x1d, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x46, 0x72, 0x65, 0x71, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57,
	0x4d, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x65, 0x71, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x65, 0x71, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12,
	0x77, 0x0a, 0x1d, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64,
	0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x72, 0x65, 0x71,
	0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x46, 0x72, 0x65, 0x71, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d,
	0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x46, 0x72,
	0x65, 0x71, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x6e, 0x0a, 0x1a, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d,
	0x5f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53,
	0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x71, 0x0a, 0x1b, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52, 0x65,
	0x73, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57,
	0x4d, 0x5f, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x52, 0x65, 0x73, 0x65,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x86, 0x01, 0x0a, 0x22,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57,
	0x4d, 0x5f, 0x53, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x75, 0x74, 0x79, 0x43, 0x79, 0x63,
	0x6c, 0x65, 0x12, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44,
	0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x53, 0x65, 0x74,
	0x50, 0x6f, 0x72, 0x74, 0x44, 0x75, 0x74, 0x79, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x53, 0x65,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x75, 0x74, 0x79, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x12, 0x86, 0x01, 0x0a, 0x22, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x44, 0x75, 0x74, 0x79, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x12, 0x2f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f,
	0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x75, 0x74,
	0x79, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d,
	0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x44, 0x75,
	0x74, 0x79, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x65, 0x0a,
	0x17, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50,
	0x57, 0x4d, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69, 0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50,
	0x57, 0x4d, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x24,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x53, 0x69,
	0x67, 0x6d, 0x6f, 0x64, 0x5f, 0x50, 0x57, 0x4d, 0x5f, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x12, 0x77, 0x0a, 0x1d, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45,
	0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x95, 0x01,
	0x0a, 0x27, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65,
	0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65,
	0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45,
	0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x43,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x92, 0x01, 0x0a, 0x26, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x5f, 0x54, 0x75, 0x72, 0x6e, 0x42, 0x79, 0x44, 0x75, 0x74, 0x79, 0x43, 0x79, 0x63, 0x6c, 0x65,
	0x12, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f,
	0x54, 0x75, 0x72, 0x6e, 0x42, 0x79, 0x44, 0x75, 0x74, 0x79, 0x43, 0x79, 0x63, 0x6c, 0x65, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x5f, 0x54, 0x75, 0x72, 0x6e, 0x42, 0x79, 0x44, 0x75, 0x74, 0x79, 0x43,
	0x79, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x86, 0x01, 0x0a, 0x22, 0x52,
	0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f,
	0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x54, 0x75, 0x72, 0x6e, 0x42, 0x79, 0x50, 0x75, 0x6c, 0x73,
	0x65, 0x12, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x5f, 0x54, 0x75, 0x72, 0x6e, 0x42, 0x79, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44,
	0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x5f, 0x54, 0x75, 0x72, 0x6e, 0x42, 0x79, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x12, 0x92, 0x01, 0x0a, 0x26, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45,
	0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x12, 0x33,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78,
	0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x47, 0x65,
	0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41, 0x6e, 0x67,
	0x6c, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x7d, 0x0a, 0x1f, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f,
	0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65,
	0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x8c, 0x01, 0x0a, 0x24, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x5f, 0x4d, 0x69, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f,
	0x4d, 0x69, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x5f, 0x4d, 0x69, 0x6e, 0x53, 0x74, 0x65, 0x70, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x71, 0x0a, 0x1b, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x5f, 0x54, 0x75, 0x72, 0x6e, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x5f, 0x54, 0x75, 0x72, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45,
	0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x54,
	0x75, 0x72, 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x71, 0x0a, 0x1b, 0x52, 0x49, 0x5f,
	0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72,
	0x69, 0x76, 0x65, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72,
	0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44,
	0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x77, 0x0a, 0x1d,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76,
	0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65,
	0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x52, 0x6f, 0x74,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2a, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65,
	0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0xaa, 0x01, 0x0a, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b,
	0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65,
	0x5f, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72,
	0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x57, 0x69,
	0x74, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x3b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49,
	0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x5f, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x52,
	0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0xa4, 0x01, 0x0a, 0x2c, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78,
	0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x54, 0x75,
	0x72, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x12, 0x39, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69,
	0x76, 0x65, 0x5f, 0x54, 0x75, 0x72, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x53, 0x70, 0x65, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x39,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78,
	0x65, 0x63, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x6f, 0x44, 0x72, 0x69, 0x76, 0x65, 0x5f, 0x54, 0x75,
	0x72, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x53, 0x70,
	0x65, 0x65, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x6e, 0x0a, 0x1a, 0x52, 0x49, 0x5f,
	0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44,
	0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f,
	0x4c, 0x45, 0x44, 0x5f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f,
	0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x7d, 0x0a, 0x1f, 0x52, 0x49, 0x5f,
	0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44,
	0x5f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x75, 0x6c, 0x73, 0x65, 0x12, 0x2c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63,
	0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50,
	0x75, 0x6c, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x2c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52,
	0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x75, 0x6c,
	0x73, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x68, 0x0a, 0x18, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f,
	0x53, 0x74, 0x6f, 0x70, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f,
	0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44,
	0x5f, 0x53, 0x74, 0x6f, 0x70, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x25, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f,
	0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x12, 0x74, 0x0a, 0x1c, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65,
	0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44,
	0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x29, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65,
	0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x74, 0x0a, 0x1c, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42,
	0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x1a, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53,
	0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x9b,
	0x01, 0x0a, 0x29, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52,
	0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x57,
	0x69, 0x74, 0x68, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x36, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63,
	0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x57, 0x69, 0x74, 0x68, 0x46, 0x72, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x1a, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f,
	0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44,
	0x5f, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x74, 0x68, 0x46, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x8f, 0x01, 0x0a,
	0x25, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42,
	0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x74,
	0x68, 0x50, 0x61, 0x75, 0x73, 0x65, 0x12, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52,
	0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c,
	0x45, 0x44, 0x5f, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x57, 0x69, 0x74, 0x68, 0x50,
	0x61, 0x75, 0x73, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x32, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52,
	0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x69, 0x6e, 0x67, 0x57,
	0x69, 0x74, 0x68, 0x50, 0x61, 0x75, 0x73, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x71,
	0x0a, 0x1b, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47,
	0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x6c, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x28, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65,
	0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f, 0x4c, 0x45, 0x44, 0x5f, 0x46, 0x6c, 0x69, 0x63, 0x6b, 0x65,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x52, 0x49, 0x5f, 0x53, 0x44, 0x4b, 0x5f, 0x45, 0x78, 0x65, 0x63, 0x5f, 0x52, 0x47, 0x42, 0x5f,
	0x4c, 0x45, 0x44, 0x5f, 0x46, 0x6c, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_RoboSdk_proto_rawDescOnce sync.Once
	file_RoboSdk_proto_rawDescData = file_RoboSdk_proto_rawDesc
)

func file_RoboSdk_proto_rawDescGZIP() []byte {
	file_RoboSdk_proto_rawDescOnce.Do(func() {
		file_RoboSdk_proto_rawDescData = protoimpl.X.CompressGZIP(file_RoboSdk_proto_rawDescData)
	})
	return file_RoboSdk_proto_rawDescData
}

var file_RoboSdk_proto_msgTypes = make([]protoimpl.MessageInfo, 115)
var file_RoboSdk_proto_goTypes = []interface{}{
	(*RI_SDK_InitSDKParams)(nil),                                 // 0: proto.RI_SDK_InitSDKParams
	(*RI_SDK_InitSDKReturn)(nil),                                 // 1: proto.RI_SDK_InitSDKReturn
	(*RI_SDK_CreateBasicParams)(nil),                             // 2: proto.RI_SDK_CreateBasicParams
	(*RI_SDK_CreateBasicReturn)(nil),                             // 3: proto.RI_SDK_CreateBasicReturn
	(*RI_SDK_DestroyComponentParams)(nil),                        // 4: proto.RI_SDK_DestroyComponentParams
	(*RI_SDK_DestroyComponentReturn)(nil),                        // 5: proto.RI_SDK_DestroyComponentReturn
	(*RI_SDK_DestroySDKParams)(nil),                              // 6: proto.RI_SDK_DestroySDKParams
	(*RI_SDK_DestroySDKReturn)(nil),                              // 7: proto.RI_SDK_DestroySDKReturn
	(*RI_SDK_Connector_I2C_OpenParams)(nil),                      // 8: proto.RI_SDK_Connector_I2C_OpenParams
	(*RI_SDK_Connector_I2C_OpenReturn)(nil),                      // 9: proto.RI_SDK_Connector_I2C_OpenReturn
	(*Empty)(nil),                                                // 10: proto.Empty
	(*RI_SDK_Connector_I2C_ExtendParams)(nil),                    // 11: proto.RI_SDK_Connector_I2C_ExtendParams
	(*RI_SDK_Connector_I2C_ExtendReturn)(nil),                    // 12: proto.RI_SDK_Connector_I2C_ExtendReturn
	(*RI_SDK_Connector_I2C_StateParams)(nil),                     // 13: proto.RI_SDK_Connector_I2C_StateParams
	(*RI_SDK_Connector_I2C_StateReturn)(nil),                     // 14: proto.RI_SDK_Connector_I2C_StateReturn
	(*RI_SDK_Connector_I2C_CloseAllParams)(nil),                  // 15: proto.RI_SDK_Connector_I2C_CloseAllParams
	(*RI_SDK_Connector_I2C_CloseAllReturn)(nil),                  // 16: proto.RI_SDK_Connector_I2C_CloseAllReturn
	(*RI_SDK_Connector_I2C_CloseParams)(nil),                     // 17: proto.RI_SDK_Connector_I2C_CloseParams
	(*RI_SDK_Connector_I2C_CloseReturn)(nil),                     // 18: proto.RI_SDK_Connector_I2C_CloseReturn
	(*RI_SDK_Connector_I2C_WriteBytesParams)(nil),                // 19: proto.RI_SDK_Connector_I2C_WriteBytesParams
	(*RI_SDK_Connector_I2C_WriteBytesReturn)(nil),                // 20: proto.RI_SDK_Connector_I2C_WriteBytesReturn
	(*RI_SDK_Connector_I2C_ReadBytesParams)(nil),                 // 21: proto.RI_SDK_Connector_I2C_ReadBytesParams
	(*RI_SDK_Connector_I2C_ReadBytesReturn)(nil),                 // 22: proto.RI_SDK_Connector_I2C_ReadBytesReturn
	(*RI_SDK_Connector_I2C_WriteByteParams)(nil),                 // 23: proto.RI_SDK_Connector_I2C_WriteByteParams
	(*RI_SDK_Connector_I2C_WriteByteReturn)(nil),                 // 24: proto.RI_SDK_Connector_I2C_WriteByteReturn
	(*RI_SDK_Connector_I2C_ReadByteParams)(nil),                  // 25: proto.RI_SDK_Connector_I2C_ReadByteParams
	(*RI_SDK_Connector_I2C_ReadByteReturn)(nil),                  // 26: proto.RI_SDK_Connector_I2C_ReadByteReturn
	(*RI_SDK_Sigmod_PWM_GetResolutionParams)(nil),                // 27: proto.RI_SDK_Sigmod_PWM_GetResolutionParams
	(*RI_SDK_Sigmod_PWM_GetResolutioneReturn)(nil),               // 28: proto.RI_SDK_Sigmod_PWM_GetResolutioneReturn
	(*RI_SDK_Sigmod_PWM_GetFreqParams)(nil),                      // 29: proto.RI_SDK_Sigmod_PWM_GetFreqParams
	(*RI_SDK_Sigmod_PWM_GetFreqReturn)(nil),                      // 30: proto.RI_SDK_Sigmod_PWM_GetFreqReturn
	(*RI_SDK_Sigmod_PWM_SetFreqParams)(nil),                      // 31: proto.RI_SDK_Sigmod_PWM_SetFreqParams
	(*RI_SDK_Sigmod_PWM_SetFreqReturn)(nil),                      // 32: proto.RI_SDK_Sigmod_PWM_SetFreqReturn
	(*RI_SDK_Sigmod_PWM_WriteRegBytesParams)(nil),                // 33: proto.RI_SDK_Sigmod_PWM_WriteRegBytesParams
	(*RI_SDK_Sigmod_PWM_WriteRegBytesReturn)(nil),                // 34: proto.RI_SDK_Sigmod_PWM_WriteRegBytesReturn
	(*RI_SDK_Sigmod_PWM_ReadRegBytesParams)(nil),                 // 35: proto.RI_SDK_Sigmod_PWM_ReadRegBytesParams
	(*RI_SDK_Sigmod_PWM_ReadRegBytesReturn)(nil),                 // 36: proto.RI_SDK_Sigmod_PWM_ReadRegBytesReturn
	(*RI_SDK_Sigmod_PWM_WriteRegByteParams)(nil),                 // 37: proto.RI_SDK_Sigmod_PWM_WriteRegByteParams
	(*RI_SDK_Sigmod_PWM_WriteRegByteReturn)(nil),                 // 38: proto.RI_SDK_Sigmod_PWM_WriteRegByteReturn
	(*RI_SDK_Sigmod_PWM_ReadRegByteParams)(nil),                  // 39: proto.RI_SDK_Sigmod_PWM_ReadRegByteParams
	(*RI_SDK_Sigmod_PWM_ReadRegByteReturn)(nil),                  // 40: proto.RI_SDK_Sigmod_PWM_ReadRegByteReturn
	(*RI_SDK_Executor_ExtendParams)(nil),                         // 41: proto.RI_SDK_Executor_ExtendParams
	(*RI_SDK_Executor_ExtendReturn)(nil),                         // 42: proto.RI_SDK_Executor_ExtendReturn
	(*RI_SDK_Executor_StateParams)(nil),                          // 43: proto.RI_SDK_Executor_StateParams
	(*RI_SDK_Executor_StateReturn)(nil),                          // 44: proto.RI_SDK_Executor_StateReturn
	(*RI_SDK_Connector_ExtendParams)(nil),                        // 45: proto.RI_SDK_Connector_ExtendParams
	(*RI_SDK_Connector_ExtendReturn)(nil),                        // 46: proto.RI_SDK_Connector_ExtendReturn
	(*RI_SDK_Sigmod_PWM_ExtendParams)(nil),                       // 47: proto.RI_SDK_Sigmod_PWM_ExtendParams
	(*RI_SDK_Sigmod_PWM_ExtendReturn)(nil),                       // 48: proto.RI_SDK_Sigmod_PWM_ExtendReturn
	(*RI_SDK_Exec_ServoDrive_ExtendParams)(nil),                  // 49: proto.RI_SDK_Exec_ServoDrive_ExtendParams
	(*RI_SDK_Exec_ServoDrive_ExtendReturn)(nil),                  // 50: proto.RI_SDK_Exec_ServoDrive_ExtendReturn
	(*RI_SDK_Exec_RGB_LED_ExtendParams)(nil),                     // 51: proto.RI_SDK_Exec_RGB_LED_ExtendParams
	(*RI_SDK_Exec_RGB_LED_ExtendReturn)(nil),                     // 52: proto.RI_SDK_Exec_RGB_LED_ExtendReturn
	(*RI_SDK_Sigmod_PWM_GetPortFreqParams)(nil),                  // 53: proto.RI_SDK_Sigmod_PWM_GetPortFreqParams
	(*RI_SDK_Sigmod_PWM_GetPortFreqReturn)(nil),                  // 54: proto.RI_SDK_Sigmod_PWM_GetPortFreqReturn
	(*RI_SDK_CreateGroupComponentParams)(nil),                    // 55: proto.RI_SDK_CreateGroupComponentParams
	(*RI_SDK_CreateGroupComponentReturn)(nil),                    // 56: proto.RI_SDK_CreateGroupComponentReturn
	(*RI_SDK_CreateDeviceComponentParams)(nil),                   // 57: proto.RI_SDK_CreateDeviceComponentParams
	(*RI_SDK_CreateDeviceComponentReturn)(nil),                   // 58: proto.RI_SDK_CreateDeviceComponentReturn
	(*RI_SDK_CreateModelComponentParams)(nil),                    // 59: proto.RI_SDK_CreateModelComponentParams
	(*RI_SDK_CreateModelComponentReturn)(nil),                    // 60: proto.RI_SDK_CreateModelComponentReturn
	(*RI_SDK_LinkPWMToControllerParams)(nil),                     // 61: proto.RI_SDK_LinkPWMToControllerParams
	(*RI_SDK_LinkPWMToControllerReturn)(nil),                     // 62: proto.RI_SDK_LinkPWMToControllerReturn
	(*RI_SDK_LinkServodriveToControllerParams)(nil),              // 63: proto.RI_SDK_LinkServodriveToControllerParams
	(*RI_SDK_LinkServodriveToControllerReturn)(nil),              // 64: proto.RI_SDK_LinkServodriveToControllerReturn
	(*RI_SDK_LinkLedToControllerParams)(nil),                     // 65: proto.RI_SDK_LinkLedToControllerParams
	(*RI_SDK_LinkLedToControllerReturn)(nil),                     // 66: proto.RI_SDK_LinkLedToControllerReturn
	(*RI_SDK_Exec_ServoDrive_CustomDeviceInitParams)(nil),        // 67: proto.RI_SDK_Exec_ServoDrive_CustomDeviceInitParams
	(*RI_SDK_Exec_ServoDrive_CustomDeviceInitReturn)(nil),        // 68: proto.RI_SDK_Exec_ServoDrive_CustomDeviceInitReturn
	(*RI_SDK_Sigmod_PWM_SetPortFreqParams)(nil),                  // 69: proto.RI_SDK_Sigmod_PWM_SetPortFreqParams
	(*RI_SDK_Sigmod_PWM_SetPortFreqReturn)(nil),                  // 70: proto.RI_SDK_Sigmod_PWM_SetPortFreqReturn
	(*RI_SDK_Exec_ServoDrive_TurnByDutyCycleParams)(nil),         // 71: proto.RI_SDK_Exec_ServoDrive_TurnByDutyCycleParams
	(*RI_SDK_Exec_ServoDrive_TurnByDutyCycleReturn)(nil),         // 72: proto.RI_SDK_Exec_ServoDrive_TurnByDutyCycleReturn
	(*RI_SDK_Sigmod_PWM_ResetAllParams)(nil),                     // 73: proto.RI_SDK_Sigmod_PWM_ResetAllParams
	(*RI_SDK_Sigmod_PWM_ResetAllReturn)(nil),                     // 74: proto.RI_SDK_Sigmod_PWM_ResetAllReturn
	(*RI_SDK_Exec_ServoDrive_TurnByPulseParams)(nil),             // 75: proto.RI_SDK_Exec_ServoDrive_TurnByPulseParams
	(*RI_SDK_Exec_ServoDrive_TurnByPulseReturn)(nil),             // 76: proto.RI_SDK_Exec_ServoDrive_TurnByPulseReturn
	(*RI_SDK_Sigmod_PWM_ResetPortParams)(nil),                    // 77: proto.RI_SDK_Sigmod_PWM_ResetPortParams
	(*RI_SDK_Sigmod_PWM_ResetPortReturn)(nil),                    // 78: proto.RI_SDK_Sigmod_PWM_ResetPortReturn
	(*RI_SDK_Exec_ServoDrive_GetCurrentAngleParams)(nil),         // 79: proto.RI_SDK_Exec_ServoDrive_GetCurrentAngleParams
	(*RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn)(nil),         // 80: proto.RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn
	(*RI_SDK_Exec_ServoDrive_GetStateParams)(nil),                // 81: proto.RI_SDK_Exec_ServoDrive_GetStateParams
	(*RI_SDK_Exec_ServoDrive_GetStateReturn)(nil),                // 82: proto.RI_SDK_Exec_ServoDrive_GetStateReturn
	(*RI_SDK_Sigmod_PWM_GetPortDutyCycleParams)(nil),             // 83: proto.RI_SDK_Sigmod_PWM_GetPortDutyCycleParams
	(*RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn)(nil),             // 84: proto.RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn
	(*RI_SDK_Sigmod_PWM_SetPortDutyCycleParams)(nil),             // 85: proto.RI_SDK_Sigmod_PWM_SetPortDutyCycleParams
	(*RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn)(nil),             // 86: proto.RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn
	(*RI_SDK_Exec_ServoDrive_MinStepRotateParams)(nil),           // 87: proto.RI_SDK_Exec_ServoDrive_MinStepRotateParams
	(*RI_SDK_Exec_ServoDrive_MinStepRotateReturn)(nil),           // 88: proto.RI_SDK_Exec_ServoDrive_MinStepRotateReturn
	(*RI_SDK_Exec_ServoDrive_TurnParams)(nil),                    // 89: proto.RI_SDK_Exec_ServoDrive_TurnParams
	(*RI_SDK_Exec_ServoDrive_TurnReturn)(nil),                    // 90: proto.RI_SDK_Exec_ServoDrive_TurnReturn
	(*RI_SDK_Exec_ServoDrive_StopParams)(nil),                    // 91: proto.RI_SDK_Exec_ServoDrive_StopParams
	(*RI_SDK_Exec_ServoDrive_StopReturn)(nil),                    // 92: proto.RI_SDK_Exec_ServoDrive_StopReturn
	(*RI_SDK_Exec_ServoDrive_RotateParams)(nil),                  // 93: proto.RI_SDK_Exec_ServoDrive_RotateParams
	(*RI_SDK_Exec_ServoDrive_RotateReturn)(nil),                  // 94: proto.RI_SDK_Exec_ServoDrive_RotateReturn
	(*RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams)(nil), // 95: proto.RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams
	(*RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedReturn)(nil), // 96: proto.RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedReturn
	(*RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams)(nil),   // 97: proto.RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams
	(*RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedReturn)(nil),   // 98: proto.RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedReturn
	(*RI_SDK_Exec_RGB_LED_SinglePulseParams)(nil),                // 99: proto.RI_SDK_Exec_RGB_LED_SinglePulseParams
	(*RI_SDK_Exec_RGB_LED_SinglePulseReturn)(nil),                // 100: proto.RI_SDK_Exec_RGB_LED_SinglePulseReturn
	(*RI_SDK_Exec_RGB_LED_StopParams)(nil),                       // 101: proto.RI_SDK_Exec_RGB_LED_StopParams
	(*RI_SDK_Exec_RGB_LED_StopReturn)(nil),                       // 102: proto.RI_SDK_Exec_RGB_LED_StopReturn
	(*RI_SDK_Exec_RGB_LED_GetStateParams)(nil),                   // 103: proto.RI_SDK_Exec_RGB_LED_GetStateParams
	(*RI_SDK_Exec_RGB_LED_GetStateReturn)(nil),                   // 104: proto.RI_SDK_Exec_RGB_LED_GetStateReturn
	(*RI_SDK_Exec_RGB_LED_GetColorParams)(nil),                   // 105: proto.RI_SDK_Exec_RGB_LED_GetColorParams
	(*RI_SDK_Exec_RGB_LED_GetColorReturn)(nil),                   // 106: proto.RI_SDK_Exec_RGB_LED_GetColorReturn
	(*RI_SDK_Sigmod_PWM_CloseParams)(nil),                        // 107: proto.RI_SDK_Sigmod_PWM_CloseParams
	(*RI_SDK_Sigmod_PWM_CloseReturn)(nil),                        // 108: proto.RI_SDK_Sigmod_PWM_CloseReturn
	(*RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams)(nil),      // 109: proto.RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams
	(*RI_SDK_Exec_RGB_LED_FlashingWithFrequencyReturn)(nil),      // 110: proto.RI_SDK_Exec_RGB_LED_FlashingWithFrequencyReturn
	(*RI_SDK_Exec_RGB_LED_FlashingWithPauseParams)(nil),          // 111: proto.RI_SDK_Exec_RGB_LED_FlashingWithPauseParams
	(*RI_SDK_Exec_RGB_LED_FlashingWithPauseReturn)(nil),          // 112: proto.RI_SDK_Exec_RGB_LED_FlashingWithPauseReturn
	(*RI_SDK_Exec_RGB_LED_FlickerParams)(nil),                    // 113: proto.RI_SDK_Exec_RGB_LED_FlickerParams
	(*RI_SDK_Exec_RGB_LED_FlickerReturn)(nil),                    // 114: proto.RI_SDK_Exec_RGB_LED_FlickerReturn
}
var file_RoboSdk_proto_depIdxs = []int32{
	0,   // 0: proto.RoboSdk.RI_SDK_InitSDK:input_type -> proto.RI_SDK_InitSDKParams
	2,   // 1: proto.RoboSdk.RI_SDK_CreateBasic:input_type -> proto.RI_SDK_CreateBasicParams
	4,   // 2: proto.RoboSdk.RI_SDK_DestroyComponent:input_type -> proto.RI_SDK_DestroyComponentParams
	6,   // 3: proto.RoboSdk.RI_SDK_DestroySDK:input_type -> proto.RI_SDK_DestroySDKParams
	55,  // 4: proto.RoboSdk.RI_SDK_CreateGroupComponent:input_type -> proto.RI_SDK_CreateGroupComponentParams
	57,  // 5: proto.RoboSdk.RI_SDK_CreateDeviceComponent:input_type -> proto.RI_SDK_CreateDeviceComponentParams
	59,  // 6: proto.RoboSdk.RI_SDK_CreateModelComponent:input_type -> proto.RI_SDK_CreateModelComponentParams
	61,  // 7: proto.RoboSdk.RI_SDK_LinkPWMToController:input_type -> proto.RI_SDK_LinkPWMToControllerParams
	63,  // 8: proto.RoboSdk.RI_SDK_LinkServodriveToController:input_type -> proto.RI_SDK_LinkServodriveToControllerParams
	65,  // 9: proto.RoboSdk.RI_SDK_LinkLedToController:input_type -> proto.RI_SDK_LinkLedToControllerParams
	41,  // 10: proto.RoboSdk.RI_SDK_Executor_Extend:input_type -> proto.RI_SDK_Executor_ExtendParams
	43,  // 11: proto.RoboSdk.RI_SDK_Executor_State:input_type -> proto.RI_SDK_Executor_StateParams
	45,  // 12: proto.RoboSdk.RI_SDK_Connector_Extend:input_type -> proto.RI_SDK_Connector_ExtendParams
	8,   // 13: proto.RoboSdk.RI_SDK_Connector_I2C_Open:input_type -> proto.RI_SDK_Connector_I2C_OpenParams
	11,  // 14: proto.RoboSdk.RI_SDK_Connector_I2C_Extend:input_type -> proto.RI_SDK_Connector_I2C_ExtendParams
	13,  // 15: proto.RoboSdk.RI_SDK_Connector_I2C_State:input_type -> proto.RI_SDK_Connector_I2C_StateParams
	15,  // 16: proto.RoboSdk.RI_SDK_Connector_I2C_CloseAll:input_type -> proto.RI_SDK_Connector_I2C_CloseAllParams
	17,  // 17: proto.RoboSdk.RI_SDK_Connector_I2C_Close:input_type -> proto.RI_SDK_Connector_I2C_CloseParams
	19,  // 18: proto.RoboSdk.RI_SDK_Connector_I2C_WriteBytes:input_type -> proto.RI_SDK_Connector_I2C_WriteBytesParams
	21,  // 19: proto.RoboSdk.RI_SDK_Connector_I2C_ReadBytes:input_type -> proto.RI_SDK_Connector_I2C_ReadBytesParams
	23,  // 20: proto.RoboSdk.RI_SDK_Connector_I2C_WriteByte:input_type -> proto.RI_SDK_Connector_I2C_WriteByteParams
	25,  // 21: proto.RoboSdk.RI_SDK_Connector_I2C_ReadByte:input_type -> proto.RI_SDK_Connector_I2C_ReadByteParams
	27,  // 22: proto.RoboSdk.RI_SDK_Sigmod_PWM_GetResolution:input_type -> proto.RI_SDK_Sigmod_PWM_GetResolutionParams
	29,  // 23: proto.RoboSdk.RI_SDK_Sigmod_PWM_GetFreq:input_type -> proto.RI_SDK_Sigmod_PWM_GetFreqParams
	31,  // 24: proto.RoboSdk.RI_SDK_Sigmod_PWM_SetFreq:input_type -> proto.RI_SDK_Sigmod_PWM_SetFreqParams
	33,  // 25: proto.RoboSdk.RI_SDK_Sigmod_PWM_WriteRegBytes:input_type -> proto.RI_SDK_Sigmod_PWM_WriteRegBytesParams
	35,  // 26: proto.RoboSdk.RI_SDK_Sigmod_PWM_ReadRegBytes:input_type -> proto.RI_SDK_Sigmod_PWM_ReadRegBytesParams
	37,  // 27: proto.RoboSdk.RI_SDK_Sigmod_PWM_WriteByte:input_type -> proto.RI_SDK_Sigmod_PWM_WriteRegByteParams
	39,  // 28: proto.RoboSdk.RI_SDK_Sigmod_PWM_ReadByte:input_type -> proto.RI_SDK_Sigmod_PWM_ReadRegByteParams
	47,  // 29: proto.RoboSdk.RI_SDK_Sigmod_PWM_Extend:input_type -> proto.RI_SDK_Sigmod_PWM_ExtendParams
	53,  // 30: proto.RoboSdk.RI_SDK_Sigmod_PWM_GetPortFreq:input_type -> proto.RI_SDK_Sigmod_PWM_GetPortFreqParams
	69,  // 31: proto.RoboSdk.RI_SDK_Sigmod_PWM_SetPortFreq:input_type -> proto.RI_SDK_Sigmod_PWM_SetPortFreqParams
	73,  // 32: proto.RoboSdk.RI_SDK_Sigmod_PWM_ResetAll:input_type -> proto.RI_SDK_Sigmod_PWM_ResetAllParams
	77,  // 33: proto.RoboSdk.RI_SDK_Sigmod_PWM_ResetPort:input_type -> proto.RI_SDK_Sigmod_PWM_ResetPortParams
	85,  // 34: proto.RoboSdk.RI_SDK_Sigmod_PWM_SetPortDutyCycle:input_type -> proto.RI_SDK_Sigmod_PWM_SetPortDutyCycleParams
	83,  // 35: proto.RoboSdk.RI_SDK_Sigmod_PWM_GetPortDutyCycle:input_type -> proto.RI_SDK_Sigmod_PWM_GetPortDutyCycleParams
	107, // 36: proto.RoboSdk.RI_SDK_Sigmod_PWM_Close:input_type -> proto.RI_SDK_Sigmod_PWM_CloseParams
	49,  // 37: proto.RoboSdk.RI_SDK_Exec_ServoDrive_Extend:input_type -> proto.RI_SDK_Exec_ServoDrive_ExtendParams
	67,  // 38: proto.RoboSdk.RI_SDK_Exec_ServoDrive_CustomDeviceInit:input_type -> proto.RI_SDK_Exec_ServoDrive_CustomDeviceInitParams
	71,  // 39: proto.RoboSdk.RI_SDK_Exec_ServoDrive_TurnByDutyCycle:input_type -> proto.RI_SDK_Exec_ServoDrive_TurnByDutyCycleParams
	75,  // 40: proto.RoboSdk.RI_SDK_Exec_ServoDrive_TurnByPulse:input_type -> proto.RI_SDK_Exec_ServoDrive_TurnByPulseParams
	79,  // 41: proto.RoboSdk.RI_SDK_Exec_ServoDrive_GetCurrentAngle:input_type -> proto.RI_SDK_Exec_ServoDrive_GetCurrentAngleParams
	81,  // 42: proto.RoboSdk.RI_SDK_Exec_ServoDrive_GetState:input_type -> proto.RI_SDK_Exec_ServoDrive_GetStateParams
	87,  // 43: proto.RoboSdk.RI_SDK_Exec_ServoDrive_MinStepRotate:input_type -> proto.RI_SDK_Exec_ServoDrive_MinStepRotateParams
	89,  // 44: proto.RoboSdk.RI_SDK_Exec_ServoDrive_Turn:input_type -> proto.RI_SDK_Exec_ServoDrive_TurnParams
	91,  // 45: proto.RoboSdk.RI_SDK_Exec_ServoDrive_Stop:input_type -> proto.RI_SDK_Exec_ServoDrive_StopParams
	93,  // 46: proto.RoboSdk.RI_SDK_Exec_ServoDrive_Rotate:input_type -> proto.RI_SDK_Exec_ServoDrive_RotateParams
	95,  // 47: proto.RoboSdk.RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeed:input_type -> proto.RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams
	97,  // 48: proto.RoboSdk.RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeed:input_type -> proto.RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams
	51,  // 49: proto.RoboSdk.RI_SDK_Exec_RGB_LED_Extend:input_type -> proto.RI_SDK_Exec_RGB_LED_ExtendParams
	99,  // 50: proto.RoboSdk.RI_SDK_Exec_RGB_LED_SinglePulse:input_type -> proto.RI_SDK_Exec_RGB_LED_SinglePulseParams
	101, // 51: proto.RoboSdk.RI_SDK_Exec_RGB_LED_Stop:input_type -> proto.RI_SDK_Exec_RGB_LED_StopParams
	103, // 52: proto.RoboSdk.RI_SDK_Exec_RGB_LED_GetState:input_type -> proto.RI_SDK_Exec_RGB_LED_GetStateParams
	105, // 53: proto.RoboSdk.RI_SDK_Exec_RGB_LED_GetColor:input_type -> proto.RI_SDK_Exec_RGB_LED_GetColorParams
	109, // 54: proto.RoboSdk.RI_SDK_Exec_RGB_LED_FlashingWithFrequency:input_type -> proto.RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams
	111, // 55: proto.RoboSdk.RI_SDK_Exec_RGB_LED_FlashingWithPause:input_type -> proto.RI_SDK_Exec_RGB_LED_FlashingWithPauseParams
	113, // 56: proto.RoboSdk.RI_SDK_Exec_RGB_LED_Flicker:input_type -> proto.RI_SDK_Exec_RGB_LED_FlickerParams
	1,   // 57: proto.RoboSdk.RI_SDK_InitSDK:output_type -> proto.RI_SDK_InitSDKReturn
	3,   // 58: proto.RoboSdk.RI_SDK_CreateBasic:output_type -> proto.RI_SDK_CreateBasicReturn
	5,   // 59: proto.RoboSdk.RI_SDK_DestroyComponent:output_type -> proto.RI_SDK_DestroyComponentReturn
	7,   // 60: proto.RoboSdk.RI_SDK_DestroySDK:output_type -> proto.RI_SDK_DestroySDKReturn
	56,  // 61: proto.RoboSdk.RI_SDK_CreateGroupComponent:output_type -> proto.RI_SDK_CreateGroupComponentReturn
	58,  // 62: proto.RoboSdk.RI_SDK_CreateDeviceComponent:output_type -> proto.RI_SDK_CreateDeviceComponentReturn
	60,  // 63: proto.RoboSdk.RI_SDK_CreateModelComponent:output_type -> proto.RI_SDK_CreateModelComponentReturn
	62,  // 64: proto.RoboSdk.RI_SDK_LinkPWMToController:output_type -> proto.RI_SDK_LinkPWMToControllerReturn
	64,  // 65: proto.RoboSdk.RI_SDK_LinkServodriveToController:output_type -> proto.RI_SDK_LinkServodriveToControllerReturn
	66,  // 66: proto.RoboSdk.RI_SDK_LinkLedToController:output_type -> proto.RI_SDK_LinkLedToControllerReturn
	42,  // 67: proto.RoboSdk.RI_SDK_Executor_Extend:output_type -> proto.RI_SDK_Executor_ExtendReturn
	44,  // 68: proto.RoboSdk.RI_SDK_Executor_State:output_type -> proto.RI_SDK_Executor_StateReturn
	46,  // 69: proto.RoboSdk.RI_SDK_Connector_Extend:output_type -> proto.RI_SDK_Connector_ExtendReturn
	9,   // 70: proto.RoboSdk.RI_SDK_Connector_I2C_Open:output_type -> proto.RI_SDK_Connector_I2C_OpenReturn
	12,  // 71: proto.RoboSdk.RI_SDK_Connector_I2C_Extend:output_type -> proto.RI_SDK_Connector_I2C_ExtendReturn
	14,  // 72: proto.RoboSdk.RI_SDK_Connector_I2C_State:output_type -> proto.RI_SDK_Connector_I2C_StateReturn
	16,  // 73: proto.RoboSdk.RI_SDK_Connector_I2C_CloseAll:output_type -> proto.RI_SDK_Connector_I2C_CloseAllReturn
	18,  // 74: proto.RoboSdk.RI_SDK_Connector_I2C_Close:output_type -> proto.RI_SDK_Connector_I2C_CloseReturn
	20,  // 75: proto.RoboSdk.RI_SDK_Connector_I2C_WriteBytes:output_type -> proto.RI_SDK_Connector_I2C_WriteBytesReturn
	22,  // 76: proto.RoboSdk.RI_SDK_Connector_I2C_ReadBytes:output_type -> proto.RI_SDK_Connector_I2C_ReadBytesReturn
	24,  // 77: proto.RoboSdk.RI_SDK_Connector_I2C_WriteByte:output_type -> proto.RI_SDK_Connector_I2C_WriteByteReturn
	26,  // 78: proto.RoboSdk.RI_SDK_Connector_I2C_ReadByte:output_type -> proto.RI_SDK_Connector_I2C_ReadByteReturn
	28,  // 79: proto.RoboSdk.RI_SDK_Sigmod_PWM_GetResolution:output_type -> proto.RI_SDK_Sigmod_PWM_GetResolutioneReturn
	30,  // 80: proto.RoboSdk.RI_SDK_Sigmod_PWM_GetFreq:output_type -> proto.RI_SDK_Sigmod_PWM_GetFreqReturn
	32,  // 81: proto.RoboSdk.RI_SDK_Sigmod_PWM_SetFreq:output_type -> proto.RI_SDK_Sigmod_PWM_SetFreqReturn
	34,  // 82: proto.RoboSdk.RI_SDK_Sigmod_PWM_WriteRegBytes:output_type -> proto.RI_SDK_Sigmod_PWM_WriteRegBytesReturn
	36,  // 83: proto.RoboSdk.RI_SDK_Sigmod_PWM_ReadRegBytes:output_type -> proto.RI_SDK_Sigmod_PWM_ReadRegBytesReturn
	38,  // 84: proto.RoboSdk.RI_SDK_Sigmod_PWM_WriteByte:output_type -> proto.RI_SDK_Sigmod_PWM_WriteRegByteReturn
	40,  // 85: proto.RoboSdk.RI_SDK_Sigmod_PWM_ReadByte:output_type -> proto.RI_SDK_Sigmod_PWM_ReadRegByteReturn
	48,  // 86: proto.RoboSdk.RI_SDK_Sigmod_PWM_Extend:output_type -> proto.RI_SDK_Sigmod_PWM_ExtendReturn
	54,  // 87: proto.RoboSdk.RI_SDK_Sigmod_PWM_GetPortFreq:output_type -> proto.RI_SDK_Sigmod_PWM_GetPortFreqReturn
	70,  // 88: proto.RoboSdk.RI_SDK_Sigmod_PWM_SetPortFreq:output_type -> proto.RI_SDK_Sigmod_PWM_SetPortFreqReturn
	74,  // 89: proto.RoboSdk.RI_SDK_Sigmod_PWM_ResetAll:output_type -> proto.RI_SDK_Sigmod_PWM_ResetAllReturn
	78,  // 90: proto.RoboSdk.RI_SDK_Sigmod_PWM_ResetPort:output_type -> proto.RI_SDK_Sigmod_PWM_ResetPortReturn
	86,  // 91: proto.RoboSdk.RI_SDK_Sigmod_PWM_SetPortDutyCycle:output_type -> proto.RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn
	84,  // 92: proto.RoboSdk.RI_SDK_Sigmod_PWM_GetPortDutyCycle:output_type -> proto.RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn
	108, // 93: proto.RoboSdk.RI_SDK_Sigmod_PWM_Close:output_type -> proto.RI_SDK_Sigmod_PWM_CloseReturn
	50,  // 94: proto.RoboSdk.RI_SDK_Exec_ServoDrive_Extend:output_type -> proto.RI_SDK_Exec_ServoDrive_ExtendReturn
	68,  // 95: proto.RoboSdk.RI_SDK_Exec_ServoDrive_CustomDeviceInit:output_type -> proto.RI_SDK_Exec_ServoDrive_CustomDeviceInitReturn
	72,  // 96: proto.RoboSdk.RI_SDK_Exec_ServoDrive_TurnByDutyCycle:output_type -> proto.RI_SDK_Exec_ServoDrive_TurnByDutyCycleReturn
	76,  // 97: proto.RoboSdk.RI_SDK_Exec_ServoDrive_TurnByPulse:output_type -> proto.RI_SDK_Exec_ServoDrive_TurnByPulseReturn
	80,  // 98: proto.RoboSdk.RI_SDK_Exec_ServoDrive_GetCurrentAngle:output_type -> proto.RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn
	82,  // 99: proto.RoboSdk.RI_SDK_Exec_ServoDrive_GetState:output_type -> proto.RI_SDK_Exec_ServoDrive_GetStateReturn
	88,  // 100: proto.RoboSdk.RI_SDK_Exec_ServoDrive_MinStepRotate:output_type -> proto.RI_SDK_Exec_ServoDrive_MinStepRotateReturn
	90,  // 101: proto.RoboSdk.RI_SDK_Exec_ServoDrive_Turn:output_type -> proto.RI_SDK_Exec_ServoDrive_TurnReturn
	92,  // 102: proto.RoboSdk.RI_SDK_Exec_ServoDrive_Stop:output_type -> proto.RI_SDK_Exec_ServoDrive_StopReturn
	94,  // 103: proto.RoboSdk.RI_SDK_Exec_ServoDrive_Rotate:output_type -> proto.RI_SDK_Exec_ServoDrive_RotateReturn
	96,  // 104: proto.RoboSdk.RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeed:output_type -> proto.RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedReturn
	98,  // 105: proto.RoboSdk.RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeed:output_type -> proto.RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedReturn
	52,  // 106: proto.RoboSdk.RI_SDK_Exec_RGB_LED_Extend:output_type -> proto.RI_SDK_Exec_RGB_LED_ExtendReturn
	100, // 107: proto.RoboSdk.RI_SDK_Exec_RGB_LED_SinglePulse:output_type -> proto.RI_SDK_Exec_RGB_LED_SinglePulseReturn
	102, // 108: proto.RoboSdk.RI_SDK_Exec_RGB_LED_Stop:output_type -> proto.RI_SDK_Exec_RGB_LED_StopReturn
	104, // 109: proto.RoboSdk.RI_SDK_Exec_RGB_LED_GetState:output_type -> proto.RI_SDK_Exec_RGB_LED_GetStateReturn
	106, // 110: proto.RoboSdk.RI_SDK_Exec_RGB_LED_GetColor:output_type -> proto.RI_SDK_Exec_RGB_LED_GetColorReturn
	110, // 111: proto.RoboSdk.RI_SDK_Exec_RGB_LED_FlashingWithFrequency:output_type -> proto.RI_SDK_Exec_RGB_LED_FlashingWithFrequencyReturn
	112, // 112: proto.RoboSdk.RI_SDK_Exec_RGB_LED_FlashingWithPause:output_type -> proto.RI_SDK_Exec_RGB_LED_FlashingWithPauseReturn
	114, // 113: proto.RoboSdk.RI_SDK_Exec_RGB_LED_Flicker:output_type -> proto.RI_SDK_Exec_RGB_LED_FlickerReturn
	57,  // [57:114] is the sub-list for method output_type
	0,   // [0:57] is the sub-list for method input_type
	0,   // [0:0] is the sub-list for extension type_name
	0,   // [0:0] is the sub-list for extension extendee
	0,   // [0:0] is the sub-list for field type_name
}

func init() { file_RoboSdk_proto_init() }
func file_RoboSdk_proto_init() {
	if File_RoboSdk_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_RoboSdk_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_InitSDKParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_InitSDKReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_CreateBasicParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_CreateBasicReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_DestroyComponentParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_DestroyComponentReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_DestroySDKParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_DestroySDKReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_OpenParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_OpenReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_ExtendParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_ExtendReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_StateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_StateReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_CloseAllParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_CloseAllReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_CloseParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_CloseReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_WriteBytesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_WriteBytesReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_ReadBytesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_ReadBytesReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_WriteByteParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_WriteByteReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_ReadByteParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_I2C_ReadByteReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_GetResolutionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_GetResolutioneReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_GetFreqParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_GetFreqReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_SetFreqParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_SetFreqReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_WriteRegBytesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_WriteRegBytesReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_ReadRegBytesParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_ReadRegBytesReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_WriteRegByteParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_WriteRegByteReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_ReadRegByteParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_ReadRegByteReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Executor_ExtendParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Executor_ExtendReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Executor_StateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Executor_StateReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_ExtendParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Connector_ExtendReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_ExtendParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_ExtendReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_ExtendParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_ExtendReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_ExtendParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_ExtendReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_GetPortFreqParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_GetPortFreqReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_CreateGroupComponentParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_CreateGroupComponentReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_CreateDeviceComponentParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_CreateDeviceComponentReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_CreateModelComponentParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_CreateModelComponentReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_LinkPWMToControllerParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_LinkPWMToControllerReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_LinkServodriveToControllerParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_LinkServodriveToControllerReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_LinkLedToControllerParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_LinkLedToControllerReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_CustomDeviceInitParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_CustomDeviceInitReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_SetPortFreqParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_SetPortFreqReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_TurnByDutyCycleParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_TurnByDutyCycleReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_ResetAllParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_ResetAllReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_TurnByPulseParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_TurnByPulseReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_ResetPortParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_ResetPortReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_GetCurrentAngleParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_GetCurrentAngleReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_GetStateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_GetStateReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_GetPortDutyCycleParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_GetPortDutyCycleReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_SetPortDutyCycleParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_SetPortDutyCycleReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_MinStepRotateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_MinStepRotateReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_TurnParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_TurnReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_StopParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_StopReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_RotateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_RotateReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_RotateWithRelativeSpeedReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_ServoDrive_TurnWithRelativeSpeedReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_SinglePulseParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_SinglePulseReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_StopParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_StopReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_GetStateParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_GetStateReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_GetColorParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_GetColorReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_CloseParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Sigmod_PWM_CloseReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_FlashingWithFrequencyParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_FlashingWithFrequencyReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_FlashingWithPauseParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_FlashingWithPauseReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_FlickerParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RoboSdk_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RI_SDK_Exec_RGB_LED_FlickerReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_RoboSdk_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   115,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_RoboSdk_proto_goTypes,
		DependencyIndexes: file_RoboSdk_proto_depIdxs,
		MessageInfos:      file_RoboSdk_proto_msgTypes,
	}.Build()
	File_RoboSdk_proto = out.File
	file_RoboSdk_proto_rawDesc = nil
	file_RoboSdk_proto_goTypes = nil
	file_RoboSdk_proto_depIdxs = nil
}
